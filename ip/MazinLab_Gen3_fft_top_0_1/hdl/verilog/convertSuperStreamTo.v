// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module convertSuperStreamTo (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_in_V_superSample_dout,
        p_in_V_superSample_empty_n,
        p_in_V_superSample_read,
        p_outDataArray_0_din,
        p_outDataArray_0_full_n,
        p_outDataArray_0_write,
        p_outDataArray_1_din,
        p_outDataArray_1_full_n,
        p_outDataArray_1_write,
        p_outDataArray_2_din,
        p_outDataArray_2_full_n,
        p_outDataArray_2_write,
        p_outDataArray_3_din,
        p_outDataArray_3_full_n,
        p_outDataArray_3_write,
        p_outDataArray_4_din,
        p_outDataArray_4_full_n,
        p_outDataArray_4_write,
        p_outDataArray_5_din,
        p_outDataArray_5_full_n,
        p_outDataArray_5_write,
        p_outDataArray_6_din,
        p_outDataArray_6_full_n,
        p_outDataArray_6_write,
        p_outDataArray_7_din,
        p_outDataArray_7_full_n,
        p_outDataArray_7_write,
        p_outDataArray_8_din,
        p_outDataArray_8_full_n,
        p_outDataArray_8_write,
        p_outDataArray_9_din,
        p_outDataArray_9_full_n,
        p_outDataArray_9_write,
        p_outDataArray_10_din,
        p_outDataArray_10_full_n,
        p_outDataArray_10_write,
        p_outDataArray_11_din,
        p_outDataArray_11_full_n,
        p_outDataArray_11_write,
        p_outDataArray_12_din,
        p_outDataArray_12_full_n,
        p_outDataArray_12_write,
        p_outDataArray_13_din,
        p_outDataArray_13_full_n,
        p_outDataArray_13_write,
        p_outDataArray_14_din,
        p_outDataArray_14_full_n,
        p_outDataArray_14_write,
        p_outDataArray_15_din,
        p_outDataArray_15_full_n,
        p_outDataArray_15_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [863:0] p_in_V_superSample_dout;
input   p_in_V_superSample_empty_n;
output   p_in_V_superSample_read;
output  [53:0] p_outDataArray_0_din;
input   p_outDataArray_0_full_n;
output   p_outDataArray_0_write;
output  [53:0] p_outDataArray_1_din;
input   p_outDataArray_1_full_n;
output   p_outDataArray_1_write;
output  [53:0] p_outDataArray_2_din;
input   p_outDataArray_2_full_n;
output   p_outDataArray_2_write;
output  [53:0] p_outDataArray_3_din;
input   p_outDataArray_3_full_n;
output   p_outDataArray_3_write;
output  [53:0] p_outDataArray_4_din;
input   p_outDataArray_4_full_n;
output   p_outDataArray_4_write;
output  [53:0] p_outDataArray_5_din;
input   p_outDataArray_5_full_n;
output   p_outDataArray_5_write;
output  [53:0] p_outDataArray_6_din;
input   p_outDataArray_6_full_n;
output   p_outDataArray_6_write;
output  [53:0] p_outDataArray_7_din;
input   p_outDataArray_7_full_n;
output   p_outDataArray_7_write;
output  [53:0] p_outDataArray_8_din;
input   p_outDataArray_8_full_n;
output   p_outDataArray_8_write;
output  [53:0] p_outDataArray_9_din;
input   p_outDataArray_9_full_n;
output   p_outDataArray_9_write;
output  [53:0] p_outDataArray_10_din;
input   p_outDataArray_10_full_n;
output   p_outDataArray_10_write;
output  [53:0] p_outDataArray_11_din;
input   p_outDataArray_11_full_n;
output   p_outDataArray_11_write;
output  [53:0] p_outDataArray_12_din;
input   p_outDataArray_12_full_n;
output   p_outDataArray_12_write;
output  [53:0] p_outDataArray_13_din;
input   p_outDataArray_13_full_n;
output   p_outDataArray_13_write;
output  [53:0] p_outDataArray_14_din;
input   p_outDataArray_14_full_n;
output   p_outDataArray_14_write;
output  [53:0] p_outDataArray_15_din;
input   p_outDataArray_15_full_n;
output   p_outDataArray_15_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_in_V_superSample_read;
reg p_outDataArray_0_write;
reg p_outDataArray_1_write;
reg p_outDataArray_2_write;
reg p_outDataArray_3_write;
reg p_outDataArray_4_write;
reg p_outDataArray_5_write;
reg p_outDataArray_6_write;
reg p_outDataArray_7_write;
reg p_outDataArray_8_write;
reg p_outDataArray_9_write;
reg p_outDataArray_10_write;
reg p_outDataArray_11_write;
reg p_outDataArray_12_write;
reg p_outDataArray_13_write;
reg p_outDataArray_14_write;
reg p_outDataArray_15_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_in_V_superSample_blk_n;
wire    ap_CS_fsm_state2;
reg    p_outDataArray_0_blk_n;
reg    p_outDataArray_1_blk_n;
reg    p_outDataArray_2_blk_n;
reg    p_outDataArray_3_blk_n;
reg    p_outDataArray_4_blk_n;
reg    p_outDataArray_5_blk_n;
reg    p_outDataArray_6_blk_n;
reg    p_outDataArray_7_blk_n;
reg    p_outDataArray_8_blk_n;
reg    p_outDataArray_9_blk_n;
reg    p_outDataArray_10_blk_n;
reg    p_outDataArray_11_blk_n;
reg    p_outDataArray_12_blk_n;
reg    p_outDataArray_13_blk_n;
reg    p_outDataArray_14_blk_n;
reg    p_outDataArray_15_blk_n;
wire   [7:0] i_fu_813_p2;
reg    ap_block_state2;
reg    ap_block_state1;
wire   [0:0] icmp_ln175_fu_819_p2;
reg   [7:0] i_01_reg_341;
wire   [26:0] tmp_112_fu_359_p4;
wire   [26:0] trunc_ln203_fu_355_p1;
wire   [26:0] tmp_114_fu_379_p4;
wire   [26:0] tmp_113_fu_369_p4;
wire   [26:0] tmp_116_fu_399_p4;
wire   [26:0] tmp_115_fu_389_p4;
wire   [26:0] tmp_118_fu_419_p4;
wire   [26:0] tmp_117_fu_409_p4;
wire   [26:0] tmp_120_fu_439_p4;
wire   [26:0] tmp_119_fu_429_p4;
wire   [26:0] tmp_122_fu_459_p4;
wire   [26:0] tmp_121_fu_449_p4;
wire   [26:0] tmp_124_fu_479_p4;
wire   [26:0] tmp_123_fu_469_p4;
wire   [26:0] tmp_126_fu_499_p4;
wire   [26:0] tmp_125_fu_489_p4;
wire   [26:0] tmp_128_fu_519_p4;
wire   [26:0] tmp_127_fu_509_p4;
wire   [26:0] tmp_130_fu_539_p4;
wire   [26:0] tmp_129_fu_529_p4;
wire   [26:0] tmp_132_fu_559_p4;
wire   [26:0] tmp_131_fu_549_p4;
wire   [26:0] tmp_134_fu_579_p4;
wire   [26:0] tmp_133_fu_569_p4;
wire   [26:0] tmp_s_fu_599_p4;
wire   [26:0] tmp_135_fu_589_p4;
wire   [26:0] tmp_137_fu_619_p4;
wire   [26:0] tmp_136_fu_609_p4;
wire   [26:0] tmp_139_fu_639_p4;
wire   [26:0] tmp_138_fu_629_p4;
wire   [26:0] tmp_141_fu_659_p4;
wire   [26:0] tmp_140_fu_649_p4;
reg   [1:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln175_fu_819_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln175_fu_819_p2 == 1'd0))) begin
        i_01_reg_341 <= i_fu_813_p2;
    end else if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | (~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln175_fu_819_p2 == 1'd1)))) begin
        i_01_reg_341 <= 8'd0;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln175_fu_819_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln175_fu_819_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_in_V_superSample_blk_n = p_in_V_superSample_empty_n;
    end else begin
        p_in_V_superSample_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_in_V_superSample_read = 1'b1;
    end else begin
        p_in_V_superSample_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_0_blk_n = p_outDataArray_0_full_n;
    end else begin
        p_outDataArray_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_0_write = 1'b1;
    end else begin
        p_outDataArray_0_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_10_blk_n = p_outDataArray_10_full_n;
    end else begin
        p_outDataArray_10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_10_write = 1'b1;
    end else begin
        p_outDataArray_10_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_11_blk_n = p_outDataArray_11_full_n;
    end else begin
        p_outDataArray_11_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_11_write = 1'b1;
    end else begin
        p_outDataArray_11_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_12_blk_n = p_outDataArray_12_full_n;
    end else begin
        p_outDataArray_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_12_write = 1'b1;
    end else begin
        p_outDataArray_12_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_13_blk_n = p_outDataArray_13_full_n;
    end else begin
        p_outDataArray_13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_13_write = 1'b1;
    end else begin
        p_outDataArray_13_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_14_blk_n = p_outDataArray_14_full_n;
    end else begin
        p_outDataArray_14_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_14_write = 1'b1;
    end else begin
        p_outDataArray_14_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_15_blk_n = p_outDataArray_15_full_n;
    end else begin
        p_outDataArray_15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_15_write = 1'b1;
    end else begin
        p_outDataArray_15_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_1_blk_n = p_outDataArray_1_full_n;
    end else begin
        p_outDataArray_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_1_write = 1'b1;
    end else begin
        p_outDataArray_1_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_2_blk_n = p_outDataArray_2_full_n;
    end else begin
        p_outDataArray_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_2_write = 1'b1;
    end else begin
        p_outDataArray_2_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_3_blk_n = p_outDataArray_3_full_n;
    end else begin
        p_outDataArray_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_3_write = 1'b1;
    end else begin
        p_outDataArray_3_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_4_blk_n = p_outDataArray_4_full_n;
    end else begin
        p_outDataArray_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_4_write = 1'b1;
    end else begin
        p_outDataArray_4_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_5_blk_n = p_outDataArray_5_full_n;
    end else begin
        p_outDataArray_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_5_write = 1'b1;
    end else begin
        p_outDataArray_5_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_6_blk_n = p_outDataArray_6_full_n;
    end else begin
        p_outDataArray_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_6_write = 1'b1;
    end else begin
        p_outDataArray_6_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_7_blk_n = p_outDataArray_7_full_n;
    end else begin
        p_outDataArray_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_7_write = 1'b1;
    end else begin
        p_outDataArray_7_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_8_blk_n = p_outDataArray_8_full_n;
    end else begin
        p_outDataArray_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_8_write = 1'b1;
    end else begin
        p_outDataArray_8_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_9_blk_n = p_outDataArray_9_full_n;
    end else begin
        p_outDataArray_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_outDataArray_9_write = 1'b1;
    end else begin
        p_outDataArray_9_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln175_fu_819_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = ((p_outDataArray_15_full_n == 1'b0) | (p_outDataArray_14_full_n == 1'b0) | (p_outDataArray_13_full_n == 1'b0) | (p_outDataArray_12_full_n == 1'b0) | (p_outDataArray_11_full_n == 1'b0) | (p_outDataArray_10_full_n == 1'b0) | (ap_start == 1'b0) | (p_outDataArray_9_full_n == 1'b0) | (p_outDataArray_8_full_n == 1'b0) | (p_outDataArray_7_full_n == 1'b0) | (p_outDataArray_6_full_n == 1'b0) | (p_outDataArray_5_full_n == 1'b0) | (p_outDataArray_4_full_n == 1'b0) | (p_outDataArray_3_full_n == 1'b0) | (p_outDataArray_2_full_n == 1'b0) | (p_outDataArray_1_full_n == 1'b0) | (p_outDataArray_0_full_n == 1'b0) | (p_in_V_superSample_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign i_fu_813_p2 = (8'd1 + i_01_reg_341);

assign icmp_ln175_fu_819_p2 = ((i_01_reg_341 == 8'd255) ? 1'b1 : 1'b0);

assign p_outDataArray_0_din = {{tmp_112_fu_359_p4}, {trunc_ln203_fu_355_p1}};

assign p_outDataArray_10_din = {{tmp_132_fu_559_p4}, {tmp_131_fu_549_p4}};

assign p_outDataArray_11_din = {{tmp_134_fu_579_p4}, {tmp_133_fu_569_p4}};

assign p_outDataArray_12_din = {{tmp_s_fu_599_p4}, {tmp_135_fu_589_p4}};

assign p_outDataArray_13_din = {{tmp_137_fu_619_p4}, {tmp_136_fu_609_p4}};

assign p_outDataArray_14_din = {{tmp_139_fu_639_p4}, {tmp_138_fu_629_p4}};

assign p_outDataArray_15_din = {{tmp_141_fu_659_p4}, {tmp_140_fu_649_p4}};

assign p_outDataArray_1_din = {{tmp_114_fu_379_p4}, {tmp_113_fu_369_p4}};

assign p_outDataArray_2_din = {{tmp_116_fu_399_p4}, {tmp_115_fu_389_p4}};

assign p_outDataArray_3_din = {{tmp_118_fu_419_p4}, {tmp_117_fu_409_p4}};

assign p_outDataArray_4_din = {{tmp_120_fu_439_p4}, {tmp_119_fu_429_p4}};

assign p_outDataArray_5_din = {{tmp_122_fu_459_p4}, {tmp_121_fu_449_p4}};

assign p_outDataArray_6_din = {{tmp_124_fu_479_p4}, {tmp_123_fu_469_p4}};

assign p_outDataArray_7_din = {{tmp_126_fu_499_p4}, {tmp_125_fu_489_p4}};

assign p_outDataArray_8_din = {{tmp_128_fu_519_p4}, {tmp_127_fu_509_p4}};

assign p_outDataArray_9_din = {{tmp_130_fu_539_p4}, {tmp_129_fu_529_p4}};

assign tmp_112_fu_359_p4 = {{p_in_V_superSample_dout[458:432]}};

assign tmp_113_fu_369_p4 = {{p_in_V_superSample_dout[53:27]}};

assign tmp_114_fu_379_p4 = {{p_in_V_superSample_dout[485:459]}};

assign tmp_115_fu_389_p4 = {{p_in_V_superSample_dout[80:54]}};

assign tmp_116_fu_399_p4 = {{p_in_V_superSample_dout[512:486]}};

assign tmp_117_fu_409_p4 = {{p_in_V_superSample_dout[107:81]}};

assign tmp_118_fu_419_p4 = {{p_in_V_superSample_dout[539:513]}};

assign tmp_119_fu_429_p4 = {{p_in_V_superSample_dout[134:108]}};

assign tmp_120_fu_439_p4 = {{p_in_V_superSample_dout[566:540]}};

assign tmp_121_fu_449_p4 = {{p_in_V_superSample_dout[161:135]}};

assign tmp_122_fu_459_p4 = {{p_in_V_superSample_dout[593:567]}};

assign tmp_123_fu_469_p4 = {{p_in_V_superSample_dout[188:162]}};

assign tmp_124_fu_479_p4 = {{p_in_V_superSample_dout[620:594]}};

assign tmp_125_fu_489_p4 = {{p_in_V_superSample_dout[215:189]}};

assign tmp_126_fu_499_p4 = {{p_in_V_superSample_dout[647:621]}};

assign tmp_127_fu_509_p4 = {{p_in_V_superSample_dout[242:216]}};

assign tmp_128_fu_519_p4 = {{p_in_V_superSample_dout[674:648]}};

assign tmp_129_fu_529_p4 = {{p_in_V_superSample_dout[269:243]}};

assign tmp_130_fu_539_p4 = {{p_in_V_superSample_dout[701:675]}};

assign tmp_131_fu_549_p4 = {{p_in_V_superSample_dout[296:270]}};

assign tmp_132_fu_559_p4 = {{p_in_V_superSample_dout[728:702]}};

assign tmp_133_fu_569_p4 = {{p_in_V_superSample_dout[323:297]}};

assign tmp_134_fu_579_p4 = {{p_in_V_superSample_dout[755:729]}};

assign tmp_135_fu_589_p4 = {{p_in_V_superSample_dout[350:324]}};

assign tmp_136_fu_609_p4 = {{p_in_V_superSample_dout[377:351]}};

assign tmp_137_fu_619_p4 = {{p_in_V_superSample_dout[809:783]}};

assign tmp_138_fu_629_p4 = {{p_in_V_superSample_dout[404:378]}};

assign tmp_139_fu_639_p4 = {{p_in_V_superSample_dout[836:810]}};

assign tmp_140_fu_649_p4 = {{p_in_V_superSample_dout[431:405]}};

assign tmp_141_fu_659_p4 = {{p_in_V_superSample_dout[863:837]}};

assign tmp_s_fu_599_p4 = {{p_in_V_superSample_dout[782:756]}};

assign trunc_ln203_fu_355_p1 = p_in_V_superSample_dout[26:0];

endmodule //convertSuperStreamTo
