-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft_top is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_inData_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    p_inData_empty_n : IN STD_LOGIC;
    p_inData_read : OUT STD_LOGIC;
    p_outData_din : OUT STD_LOGIC_VECTOR (863 downto 0);
    p_outData_full_n : IN STD_LOGIC;
    p_outData_write : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of fft_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fft_top,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=11.775000,HLS_SYN_LAT=851,HLS_SYN_TPT=496,HLS_SYN_MEM=62,HLS_SYN_DSP=198,HLS_SYN_FF=131237,HLS_SYN_LUT=103756,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv864_lc_1 : STD_LOGIC_VECTOR (863 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal digitReverseBuff_0_i_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_0_t_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_1_i_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_1_t_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_2_i_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_2_t_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_3_i_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_3_t_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_4_i_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_4_t_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_5_i_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_5_t_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_6_i_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_6_t_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_7_i_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_7_t_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_8_i_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_8_t_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_9_i_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_9_t_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_10_i_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_10_t_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_11_i_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_11_t_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_12_i_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_12_t_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_13_i_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_13_t_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_14_i_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_14_t_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_15_i_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal digitReverseBuff_15_t_q0 : STD_LOGIC_VECTOR (53 downto 0);
    signal castArrayS2Streaming_U0_ap_start : STD_LOGIC;
    signal castArrayS2Streaming_U0_ap_done : STD_LOGIC;
    signal castArrayS2Streaming_U0_ap_continue : STD_LOGIC;
    signal castArrayS2Streaming_U0_ap_idle : STD_LOGIC;
    signal castArrayS2Streaming_U0_ap_ready : STD_LOGIC;
    signal castArrayS2Streaming_U0_p_inData_read : STD_LOGIC;
    signal castArrayS2Streaming_U0_p_outData_V_superSample_din : STD_LOGIC_VECTOR (511 downto 0);
    signal castArrayS2Streaming_U0_p_outData_V_superSample_write : STD_LOGIC;
    signal streamingDataCommuto_1_U0_ap_start : STD_LOGIC;
    signal streamingDataCommuto_1_U0_ap_done : STD_LOGIC;
    signal streamingDataCommuto_1_U0_ap_continue : STD_LOGIC;
    signal streamingDataCommuto_1_U0_ap_idle : STD_LOGIC;
    signal streamingDataCommuto_1_U0_ap_ready : STD_LOGIC;
    signal streamingDataCommuto_1_U0_p_sampleOut_V_superSample_din : STD_LOGIC_VECTOR (511 downto 0);
    signal streamingDataCommuto_1_U0_p_sampleOut_V_superSample_write : STD_LOGIC;
    signal streamingDataCommuto_1_U0_p_sampleIn_V_superSample_read : STD_LOGIC;
    signal ap_sync_reg_streamingDataCommuto_1_U0_ap_start : STD_LOGIC := '0';
    signal streamingDataCommuto_3_U0_ap_start : STD_LOGIC;
    signal streamingDataCommuto_3_U0_ap_done : STD_LOGIC;
    signal streamingDataCommuto_3_U0_ap_continue : STD_LOGIC;
    signal streamingDataCommuto_3_U0_ap_idle : STD_LOGIC;
    signal streamingDataCommuto_3_U0_ap_ready : STD_LOGIC;
    signal streamingDataCommuto_3_U0_p_sampleOut_V_superSample_din : STD_LOGIC_VECTOR (511 downto 0);
    signal streamingDataCommuto_3_U0_p_sampleOut_V_superSample_write : STD_LOGIC;
    signal streamingDataCommuto_3_U0_p_sampleIn_V_superSample_read : STD_LOGIC;
    signal ap_sync_reg_streamingDataCommuto_3_U0_ap_start : STD_LOGIC := '0';
    signal fftStageKernelS2S_U0_ap_start : STD_LOGIC;
    signal fftStageKernelS2S_U0_ap_done : STD_LOGIC;
    signal fftStageKernelS2S_U0_ap_continue : STD_LOGIC;
    signal fftStageKernelS2S_U0_ap_idle : STD_LOGIC;
    signal fftStageKernelS2S_U0_ap_ready : STD_LOGIC;
    signal fftStageKernelS2S_U0_p_fftReOrderedInput_V_superSample_read : STD_LOGIC;
    signal fftStageKernelS2S_U0_p_fftOutData_local_V_superSample_din : STD_LOGIC_VECTOR (671 downto 0);
    signal fftStageKernelS2S_U0_p_fftOutData_local_V_superSample_write : STD_LOGIC;
    signal ap_sync_reg_fftStageKernelS2S_U0_ap_start : STD_LOGIC := '0';
    signal streamingDataCommuto_U0_ap_start : STD_LOGIC;
    signal streamingDataCommuto_U0_ap_done : STD_LOGIC;
    signal streamingDataCommuto_U0_ap_continue : STD_LOGIC;
    signal streamingDataCommuto_U0_ap_idle : STD_LOGIC;
    signal streamingDataCommuto_U0_ap_ready : STD_LOGIC;
    signal streamingDataCommuto_U0_p_sampleOut_V_superSample_din : STD_LOGIC_VECTOR (671 downto 0);
    signal streamingDataCommuto_U0_p_sampleOut_V_superSample_write : STD_LOGIC;
    signal streamingDataCommuto_U0_p_sampleIn_V_superSample_read : STD_LOGIC;
    signal ap_sync_reg_streamingDataCommuto_U0_ap_start : STD_LOGIC := '0';
    signal fftStageKernelS2S_1_U0_ap_start : STD_LOGIC;
    signal fftStageKernelS2S_1_U0_ap_done : STD_LOGIC;
    signal fftStageKernelS2S_1_U0_ap_continue : STD_LOGIC;
    signal fftStageKernelS2S_1_U0_ap_idle : STD_LOGIC;
    signal fftStageKernelS2S_1_U0_ap_ready : STD_LOGIC;
    signal fftStageKernelS2S_1_U0_p_fftReOrderedInput_V_superSample_read : STD_LOGIC;
    signal fftStageKernelS2S_1_U0_p_fftOutData_local_V_superSample_din : STD_LOGIC_VECTOR (799 downto 0);
    signal fftStageKernelS2S_1_U0_p_fftOutData_local_V_superSample_write : STD_LOGIC;
    signal ap_sync_reg_fftStageKernelS2S_1_U0_ap_start : STD_LOGIC := '0';
    signal streamingDataCommuto_2_U0_ap_start : STD_LOGIC;
    signal streamingDataCommuto_2_U0_ap_done : STD_LOGIC;
    signal streamingDataCommuto_2_U0_ap_continue : STD_LOGIC;
    signal streamingDataCommuto_2_U0_ap_idle : STD_LOGIC;
    signal streamingDataCommuto_2_U0_ap_ready : STD_LOGIC;
    signal streamingDataCommuto_2_U0_p_sampleOut_V_superSample_din : STD_LOGIC_VECTOR (799 downto 0);
    signal streamingDataCommuto_2_U0_p_sampleOut_V_superSample_write : STD_LOGIC;
    signal streamingDataCommuto_2_U0_p_sampleIn_V_superSample_read : STD_LOGIC;
    signal ap_sync_reg_streamingDataCommuto_2_U0_ap_start : STD_LOGIC := '0';
    signal fftStageKernelLastSt_U0_ap_start : STD_LOGIC;
    signal fftStageKernelLastSt_U0_ap_done : STD_LOGIC;
    signal fftStageKernelLastSt_U0_ap_continue : STD_LOGIC;
    signal fftStageKernelLastSt_U0_ap_idle : STD_LOGIC;
    signal fftStageKernelLastSt_U0_ap_ready : STD_LOGIC;
    signal fftStageKernelLastSt_U0_p_fftReOrderedInput_V_superSample_read : STD_LOGIC;
    signal fftStageKernelLastSt_U0_p_fftOutData_local_V_superSample_din : STD_LOGIC_VECTOR (863 downto 0);
    signal fftStageKernelLastSt_U0_p_fftOutData_local_V_superSample_write : STD_LOGIC;
    signal ap_sync_reg_fftStageKernelLastSt_U0_ap_start : STD_LOGIC := '0';
    signal convertSuperStreamTo_U0_ap_start : STD_LOGIC;
    signal convertSuperStreamTo_U0_ap_done : STD_LOGIC;
    signal convertSuperStreamTo_U0_ap_continue : STD_LOGIC;
    signal convertSuperStreamTo_U0_ap_idle : STD_LOGIC;
    signal convertSuperStreamTo_U0_ap_ready : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_in_V_superSample_read : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_outDataArray_0_din : STD_LOGIC_VECTOR (53 downto 0);
    signal convertSuperStreamTo_U0_p_outDataArray_0_write : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_outDataArray_1_din : STD_LOGIC_VECTOR (53 downto 0);
    signal convertSuperStreamTo_U0_p_outDataArray_1_write : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_outDataArray_2_din : STD_LOGIC_VECTOR (53 downto 0);
    signal convertSuperStreamTo_U0_p_outDataArray_2_write : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_outDataArray_3_din : STD_LOGIC_VECTOR (53 downto 0);
    signal convertSuperStreamTo_U0_p_outDataArray_3_write : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_outDataArray_4_din : STD_LOGIC_VECTOR (53 downto 0);
    signal convertSuperStreamTo_U0_p_outDataArray_4_write : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_outDataArray_5_din : STD_LOGIC_VECTOR (53 downto 0);
    signal convertSuperStreamTo_U0_p_outDataArray_5_write : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_outDataArray_6_din : STD_LOGIC_VECTOR (53 downto 0);
    signal convertSuperStreamTo_U0_p_outDataArray_6_write : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_outDataArray_7_din : STD_LOGIC_VECTOR (53 downto 0);
    signal convertSuperStreamTo_U0_p_outDataArray_7_write : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_outDataArray_8_din : STD_LOGIC_VECTOR (53 downto 0);
    signal convertSuperStreamTo_U0_p_outDataArray_8_write : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_outDataArray_9_din : STD_LOGIC_VECTOR (53 downto 0);
    signal convertSuperStreamTo_U0_p_outDataArray_9_write : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_outDataArray_10_din : STD_LOGIC_VECTOR (53 downto 0);
    signal convertSuperStreamTo_U0_p_outDataArray_10_write : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_outDataArray_11_din : STD_LOGIC_VECTOR (53 downto 0);
    signal convertSuperStreamTo_U0_p_outDataArray_11_write : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_outDataArray_12_din : STD_LOGIC_VECTOR (53 downto 0);
    signal convertSuperStreamTo_U0_p_outDataArray_12_write : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_outDataArray_13_din : STD_LOGIC_VECTOR (53 downto 0);
    signal convertSuperStreamTo_U0_p_outDataArray_13_write : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_outDataArray_14_din : STD_LOGIC_VECTOR (53 downto 0);
    signal convertSuperStreamTo_U0_p_outDataArray_14_write : STD_LOGIC;
    signal convertSuperStreamTo_U0_p_outDataArray_15_din : STD_LOGIC_VECTOR (53 downto 0);
    signal convertSuperStreamTo_U0_p_outDataArray_15_write : STD_LOGIC;
    signal ap_sync_reg_convertSuperStreamTo_U0_ap_start : STD_LOGIC := '0';
    signal cacheDataDR_U0_ap_start : STD_LOGIC;
    signal cacheDataDR_U0_ap_done : STD_LOGIC;
    signal cacheDataDR_U0_ap_continue : STD_LOGIC;
    signal cacheDataDR_U0_ap_idle : STD_LOGIC;
    signal cacheDataDR_U0_ap_ready : STD_LOGIC;
    signal cacheDataDR_U0_p_inData_0_read : STD_LOGIC;
    signal cacheDataDR_U0_p_inData_1_read : STD_LOGIC;
    signal cacheDataDR_U0_p_inData_2_read : STD_LOGIC;
    signal cacheDataDR_U0_p_inData_3_read : STD_LOGIC;
    signal cacheDataDR_U0_p_inData_4_read : STD_LOGIC;
    signal cacheDataDR_U0_p_inData_5_read : STD_LOGIC;
    signal cacheDataDR_U0_p_inData_6_read : STD_LOGIC;
    signal cacheDataDR_U0_p_inData_7_read : STD_LOGIC;
    signal cacheDataDR_U0_p_inData_8_read : STD_LOGIC;
    signal cacheDataDR_U0_p_inData_9_read : STD_LOGIC;
    signal cacheDataDR_U0_p_inData_10_read : STD_LOGIC;
    signal cacheDataDR_U0_p_inData_11_read : STD_LOGIC;
    signal cacheDataDR_U0_p_inData_12_read : STD_LOGIC;
    signal cacheDataDR_U0_p_inData_13_read : STD_LOGIC;
    signal cacheDataDR_U0_p_inData_14_read : STD_LOGIC;
    signal cacheDataDR_U0_p_inData_15_read : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_0_ce0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_0_we0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_0_d0 : STD_LOGIC_VECTOR (53 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_1_ce0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_1_we0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_1_d0 : STD_LOGIC_VECTOR (53 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_2_ce0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_2_we0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_2_d0 : STD_LOGIC_VECTOR (53 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_3_ce0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_3_we0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_3_d0 : STD_LOGIC_VECTOR (53 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_4_ce0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_4_we0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_4_d0 : STD_LOGIC_VECTOR (53 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_5_ce0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_5_we0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_5_d0 : STD_LOGIC_VECTOR (53 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_6_ce0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_6_we0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_6_d0 : STD_LOGIC_VECTOR (53 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_7_ce0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_7_we0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_7_d0 : STD_LOGIC_VECTOR (53 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_8_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_8_ce0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_8_we0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_8_d0 : STD_LOGIC_VECTOR (53 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_9_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_9_ce0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_9_we0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_9_d0 : STD_LOGIC_VECTOR (53 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_10_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_10_ce0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_10_we0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_10_d0 : STD_LOGIC_VECTOR (53 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_11_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_11_ce0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_11_we0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_11_d0 : STD_LOGIC_VECTOR (53 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_12_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_12_ce0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_12_we0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_12_d0 : STD_LOGIC_VECTOR (53 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_13_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_13_ce0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_13_we0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_13_d0 : STD_LOGIC_VECTOR (53 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_14_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_14_ce0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_14_we0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_14_d0 : STD_LOGIC_VECTOR (53 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_15_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_15_ce0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_15_we0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_15_d0 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_sync_reg_cacheDataDR_U0_ap_start : STD_LOGIC := '0';
    signal ap_channel_done_digitReverseBuff_15 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_digitReverseBuff_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_digitReverseBuff_15 : STD_LOGIC;
    signal ap_channel_done_digitReverseBuff_14 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_digitReverseBuff_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_digitReverseBuff_14 : STD_LOGIC;
    signal ap_channel_done_digitReverseBuff_13 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_digitReverseBuff_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_digitReverseBuff_13 : STD_LOGIC;
    signal ap_channel_done_digitReverseBuff_12 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_digitReverseBuff_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_digitReverseBuff_12 : STD_LOGIC;
    signal ap_channel_done_digitReverseBuff_11 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_digitReverseBuff_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_digitReverseBuff_11 : STD_LOGIC;
    signal ap_channel_done_digitReverseBuff_10 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_digitReverseBuff_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_digitReverseBuff_10 : STD_LOGIC;
    signal ap_channel_done_digitReverseBuff_9 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_digitReverseBuff_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_digitReverseBuff_9 : STD_LOGIC;
    signal ap_channel_done_digitReverseBuff_8 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_digitReverseBuff_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_digitReverseBuff_8 : STD_LOGIC;
    signal ap_channel_done_digitReverseBuff_7 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_digitReverseBuff_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_digitReverseBuff_7 : STD_LOGIC;
    signal ap_channel_done_digitReverseBuff_6 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_digitReverseBuff_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_digitReverseBuff_6 : STD_LOGIC;
    signal ap_channel_done_digitReverseBuff_5 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_digitReverseBuff_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_digitReverseBuff_5 : STD_LOGIC;
    signal ap_channel_done_digitReverseBuff_4 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_digitReverseBuff_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_digitReverseBuff_4 : STD_LOGIC;
    signal ap_channel_done_digitReverseBuff_3 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_digitReverseBuff_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_digitReverseBuff_3 : STD_LOGIC;
    signal ap_channel_done_digitReverseBuff_2 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_digitReverseBuff_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_digitReverseBuff_2 : STD_LOGIC;
    signal ap_channel_done_digitReverseBuff_1 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_digitReverseBuff_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_digitReverseBuff_1 : STD_LOGIC;
    signal ap_channel_done_digitReverseBuff_0 : STD_LOGIC;
    signal cacheDataDR_U0_p_digitReseversedOutputBuff_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_digitReverseBuff_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_digitReverseBuff_0 : STD_LOGIC;
    signal writeBackCacheDataDR_U0_ap_start : STD_LOGIC;
    signal writeBackCacheDataDR_U0_ap_done : STD_LOGIC;
    signal writeBackCacheDataDR_U0_ap_continue : STD_LOGIC;
    signal writeBackCacheDataDR_U0_ap_idle : STD_LOGIC;
    signal writeBackCacheDataDR_U0_ap_ready : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_outData_din : STD_LOGIC_VECTOR (863 downto 0);
    signal writeBackCacheDataDR_U0_p_outData_write : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_0_ce0 : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_1_ce0 : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_2_ce0 : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_3_ce0 : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_4_ce0 : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_5_ce0 : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_6_ce0 : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_7_ce0 : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_8_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_8_ce0 : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_9_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_9_ce0 : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_10_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_10_ce0 : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_11_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_11_ce0 : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_12_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_12_ce0 : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_13_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_13_ce0 : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_14_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_14_ce0 : STD_LOGIC;
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_15_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_15_ce0 : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal digitReverseBuff_0_i_full_n : STD_LOGIC;
    signal digitReverseBuff_0_t_empty_n : STD_LOGIC;
    signal digitReverseBuff_1_i_full_n : STD_LOGIC;
    signal digitReverseBuff_1_t_empty_n : STD_LOGIC;
    signal digitReverseBuff_2_i_full_n : STD_LOGIC;
    signal digitReverseBuff_2_t_empty_n : STD_LOGIC;
    signal digitReverseBuff_3_i_full_n : STD_LOGIC;
    signal digitReverseBuff_3_t_empty_n : STD_LOGIC;
    signal digitReverseBuff_4_i_full_n : STD_LOGIC;
    signal digitReverseBuff_4_t_empty_n : STD_LOGIC;
    signal digitReverseBuff_5_i_full_n : STD_LOGIC;
    signal digitReverseBuff_5_t_empty_n : STD_LOGIC;
    signal digitReverseBuff_6_i_full_n : STD_LOGIC;
    signal digitReverseBuff_6_t_empty_n : STD_LOGIC;
    signal digitReverseBuff_7_i_full_n : STD_LOGIC;
    signal digitReverseBuff_7_t_empty_n : STD_LOGIC;
    signal digitReverseBuff_8_i_full_n : STD_LOGIC;
    signal digitReverseBuff_8_t_empty_n : STD_LOGIC;
    signal digitReverseBuff_9_i_full_n : STD_LOGIC;
    signal digitReverseBuff_9_t_empty_n : STD_LOGIC;
    signal digitReverseBuff_10_i_full_n : STD_LOGIC;
    signal digitReverseBuff_10_t_empty_n : STD_LOGIC;
    signal digitReverseBuff_11_i_full_n : STD_LOGIC;
    signal digitReverseBuff_11_t_empty_n : STD_LOGIC;
    signal digitReverseBuff_12_i_full_n : STD_LOGIC;
    signal digitReverseBuff_12_t_empty_n : STD_LOGIC;
    signal digitReverseBuff_13_i_full_n : STD_LOGIC;
    signal digitReverseBuff_13_t_empty_n : STD_LOGIC;
    signal digitReverseBuff_14_i_full_n : STD_LOGIC;
    signal digitReverseBuff_14_t_empty_n : STD_LOGIC;
    signal digitReverseBuff_15_i_full_n : STD_LOGIC;
    signal digitReverseBuff_15_t_empty_n : STD_LOGIC;
    signal casted_output_V_supe_full_n : STD_LOGIC;
    signal casted_output_V_supe_dout : STD_LOGIC_VECTOR (511 downto 0);
    signal casted_output_V_supe_empty_n : STD_LOGIC;
    signal temp_V_superSample_full_n : STD_LOGIC;
    signal temp_V_superSample_dout : STD_LOGIC_VECTOR (511 downto 0);
    signal temp_V_superSample_empty_n : STD_LOGIC;
    signal p_fftInData_reOrdere_1_full_n : STD_LOGIC;
    signal p_fftInData_reOrdere_1_dout : STD_LOGIC_VECTOR (511 downto 0);
    signal p_fftInData_reOrdere_1_empty_n : STD_LOGIC;
    signal fftOutData_local_V_s_full_n : STD_LOGIC;
    signal fftOutData_local_V_s_dout : STD_LOGIC_VECTOR (671 downto 0);
    signal fftOutData_local_V_s_empty_n : STD_LOGIC;
    signal fftOutData_local2_V_s_full_n : STD_LOGIC;
    signal fftOutData_local2_V_s_dout : STD_LOGIC_VECTOR (671 downto 0);
    signal fftOutData_local2_V_s_empty_n : STD_LOGIC;
    signal fftOutData_local_V_s_1_full_n : STD_LOGIC;
    signal fftOutData_local_V_s_1_dout : STD_LOGIC_VECTOR (799 downto 0);
    signal fftOutData_local_V_s_1_empty_n : STD_LOGIC;
    signal fftOutData_local2_V_1_full_n : STD_LOGIC;
    signal fftOutData_local2_V_1_dout : STD_LOGIC_VECTOR (799 downto 0);
    signal fftOutData_local2_V_1_empty_n : STD_LOGIC;
    signal fftOutData_local_V_s_2_full_n : STD_LOGIC;
    signal fftOutData_local_V_s_2_dout : STD_LOGIC_VECTOR (863 downto 0);
    signal fftOutData_local_V_s_2_empty_n : STD_LOGIC;
    signal fftOutData_local2_0_full_n : STD_LOGIC;
    signal fftOutData_local2_0_dout : STD_LOGIC_VECTOR (53 downto 0);
    signal fftOutData_local2_0_empty_n : STD_LOGIC;
    signal fftOutData_local2_1_full_n : STD_LOGIC;
    signal fftOutData_local2_1_dout : STD_LOGIC_VECTOR (53 downto 0);
    signal fftOutData_local2_1_empty_n : STD_LOGIC;
    signal fftOutData_local2_2_full_n : STD_LOGIC;
    signal fftOutData_local2_2_dout : STD_LOGIC_VECTOR (53 downto 0);
    signal fftOutData_local2_2_empty_n : STD_LOGIC;
    signal fftOutData_local2_3_full_n : STD_LOGIC;
    signal fftOutData_local2_3_dout : STD_LOGIC_VECTOR (53 downto 0);
    signal fftOutData_local2_3_empty_n : STD_LOGIC;
    signal fftOutData_local2_4_full_n : STD_LOGIC;
    signal fftOutData_local2_4_dout : STD_LOGIC_VECTOR (53 downto 0);
    signal fftOutData_local2_4_empty_n : STD_LOGIC;
    signal fftOutData_local2_5_full_n : STD_LOGIC;
    signal fftOutData_local2_5_dout : STD_LOGIC_VECTOR (53 downto 0);
    signal fftOutData_local2_5_empty_n : STD_LOGIC;
    signal fftOutData_local2_6_full_n : STD_LOGIC;
    signal fftOutData_local2_6_dout : STD_LOGIC_VECTOR (53 downto 0);
    signal fftOutData_local2_6_empty_n : STD_LOGIC;
    signal fftOutData_local2_7_full_n : STD_LOGIC;
    signal fftOutData_local2_7_dout : STD_LOGIC_VECTOR (53 downto 0);
    signal fftOutData_local2_7_empty_n : STD_LOGIC;
    signal fftOutData_local2_8_full_n : STD_LOGIC;
    signal fftOutData_local2_8_dout : STD_LOGIC_VECTOR (53 downto 0);
    signal fftOutData_local2_8_empty_n : STD_LOGIC;
    signal fftOutData_local2_9_full_n : STD_LOGIC;
    signal fftOutData_local2_9_dout : STD_LOGIC_VECTOR (53 downto 0);
    signal fftOutData_local2_9_empty_n : STD_LOGIC;
    signal fftOutData_local2_10_full_n : STD_LOGIC;
    signal fftOutData_local2_10_dout : STD_LOGIC_VECTOR (53 downto 0);
    signal fftOutData_local2_10_empty_n : STD_LOGIC;
    signal fftOutData_local2_11_full_n : STD_LOGIC;
    signal fftOutData_local2_11_dout : STD_LOGIC_VECTOR (53 downto 0);
    signal fftOutData_local2_11_empty_n : STD_LOGIC;
    signal fftOutData_local2_12_full_n : STD_LOGIC;
    signal fftOutData_local2_12_dout : STD_LOGIC_VECTOR (53 downto 0);
    signal fftOutData_local2_12_empty_n : STD_LOGIC;
    signal fftOutData_local2_13_full_n : STD_LOGIC;
    signal fftOutData_local2_13_dout : STD_LOGIC_VECTOR (53 downto 0);
    signal fftOutData_local2_13_empty_n : STD_LOGIC;
    signal fftOutData_local2_14_full_n : STD_LOGIC;
    signal fftOutData_local2_14_dout : STD_LOGIC_VECTOR (53 downto 0);
    signal fftOutData_local2_14_empty_n : STD_LOGIC;
    signal fftOutData_local2_15_full_n : STD_LOGIC;
    signal fftOutData_local2_15_dout : STD_LOGIC_VECTOR (53 downto 0);
    signal fftOutData_local2_15_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;

    component castArrayS2Streaming IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_inData_dout : IN STD_LOGIC_VECTOR (511 downto 0);
        p_inData_empty_n : IN STD_LOGIC;
        p_inData_read : OUT STD_LOGIC;
        p_outData_V_superSample_din : OUT STD_LOGIC_VECTOR (511 downto 0);
        p_outData_V_superSample_full_n : IN STD_LOGIC;
        p_outData_V_superSample_write : OUT STD_LOGIC );
    end component;


    component streamingDataCommuto_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_sampleOut_V_superSample_din : OUT STD_LOGIC_VECTOR (511 downto 0);
        p_sampleOut_V_superSample_full_n : IN STD_LOGIC;
        p_sampleOut_V_superSample_write : OUT STD_LOGIC;
        p_sampleIn_V_superSample_dout : IN STD_LOGIC_VECTOR (511 downto 0);
        p_sampleIn_V_superSample_empty_n : IN STD_LOGIC;
        p_sampleIn_V_superSample_read : OUT STD_LOGIC );
    end component;


    component streamingDataCommuto_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_sampleOut_V_superSample_din : OUT STD_LOGIC_VECTOR (511 downto 0);
        p_sampleOut_V_superSample_full_n : IN STD_LOGIC;
        p_sampleOut_V_superSample_write : OUT STD_LOGIC;
        p_sampleIn_V_superSample_dout : IN STD_LOGIC_VECTOR (511 downto 0);
        p_sampleIn_V_superSample_empty_n : IN STD_LOGIC;
        p_sampleIn_V_superSample_read : OUT STD_LOGIC );
    end component;


    component fftStageKernelS2S IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_fftReOrderedInput_V_superSample_dout : IN STD_LOGIC_VECTOR (511 downto 0);
        p_fftReOrderedInput_V_superSample_empty_n : IN STD_LOGIC;
        p_fftReOrderedInput_V_superSample_read : OUT STD_LOGIC;
        p_fftOutData_local_V_superSample_din : OUT STD_LOGIC_VECTOR (671 downto 0);
        p_fftOutData_local_V_superSample_full_n : IN STD_LOGIC;
        p_fftOutData_local_V_superSample_write : OUT STD_LOGIC );
    end component;


    component streamingDataCommuto IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_sampleOut_V_superSample_din : OUT STD_LOGIC_VECTOR (671 downto 0);
        p_sampleOut_V_superSample_full_n : IN STD_LOGIC;
        p_sampleOut_V_superSample_write : OUT STD_LOGIC;
        p_sampleIn_V_superSample_dout : IN STD_LOGIC_VECTOR (671 downto 0);
        p_sampleIn_V_superSample_empty_n : IN STD_LOGIC;
        p_sampleIn_V_superSample_read : OUT STD_LOGIC );
    end component;


    component fftStageKernelS2S_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_fftReOrderedInput_V_superSample_dout : IN STD_LOGIC_VECTOR (671 downto 0);
        p_fftReOrderedInput_V_superSample_empty_n : IN STD_LOGIC;
        p_fftReOrderedInput_V_superSample_read : OUT STD_LOGIC;
        p_fftOutData_local_V_superSample_din : OUT STD_LOGIC_VECTOR (799 downto 0);
        p_fftOutData_local_V_superSample_full_n : IN STD_LOGIC;
        p_fftOutData_local_V_superSample_write : OUT STD_LOGIC );
    end component;


    component streamingDataCommuto_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_sampleOut_V_superSample_din : OUT STD_LOGIC_VECTOR (799 downto 0);
        p_sampleOut_V_superSample_full_n : IN STD_LOGIC;
        p_sampleOut_V_superSample_write : OUT STD_LOGIC;
        p_sampleIn_V_superSample_dout : IN STD_LOGIC_VECTOR (799 downto 0);
        p_sampleIn_V_superSample_empty_n : IN STD_LOGIC;
        p_sampleIn_V_superSample_read : OUT STD_LOGIC );
    end component;


    component fftStageKernelLastSt IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_fftReOrderedInput_V_superSample_dout : IN STD_LOGIC_VECTOR (799 downto 0);
        p_fftReOrderedInput_V_superSample_empty_n : IN STD_LOGIC;
        p_fftReOrderedInput_V_superSample_read : OUT STD_LOGIC;
        p_fftOutData_local_V_superSample_din : OUT STD_LOGIC_VECTOR (863 downto 0);
        p_fftOutData_local_V_superSample_full_n : IN STD_LOGIC;
        p_fftOutData_local_V_superSample_write : OUT STD_LOGIC );
    end component;


    component convertSuperStreamTo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_in_V_superSample_dout : IN STD_LOGIC_VECTOR (863 downto 0);
        p_in_V_superSample_empty_n : IN STD_LOGIC;
        p_in_V_superSample_read : OUT STD_LOGIC;
        p_outDataArray_0_din : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_outDataArray_0_full_n : IN STD_LOGIC;
        p_outDataArray_0_write : OUT STD_LOGIC;
        p_outDataArray_1_din : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_outDataArray_1_full_n : IN STD_LOGIC;
        p_outDataArray_1_write : OUT STD_LOGIC;
        p_outDataArray_2_din : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_outDataArray_2_full_n : IN STD_LOGIC;
        p_outDataArray_2_write : OUT STD_LOGIC;
        p_outDataArray_3_din : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_outDataArray_3_full_n : IN STD_LOGIC;
        p_outDataArray_3_write : OUT STD_LOGIC;
        p_outDataArray_4_din : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_outDataArray_4_full_n : IN STD_LOGIC;
        p_outDataArray_4_write : OUT STD_LOGIC;
        p_outDataArray_5_din : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_outDataArray_5_full_n : IN STD_LOGIC;
        p_outDataArray_5_write : OUT STD_LOGIC;
        p_outDataArray_6_din : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_outDataArray_6_full_n : IN STD_LOGIC;
        p_outDataArray_6_write : OUT STD_LOGIC;
        p_outDataArray_7_din : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_outDataArray_7_full_n : IN STD_LOGIC;
        p_outDataArray_7_write : OUT STD_LOGIC;
        p_outDataArray_8_din : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_outDataArray_8_full_n : IN STD_LOGIC;
        p_outDataArray_8_write : OUT STD_LOGIC;
        p_outDataArray_9_din : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_outDataArray_9_full_n : IN STD_LOGIC;
        p_outDataArray_9_write : OUT STD_LOGIC;
        p_outDataArray_10_din : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_outDataArray_10_full_n : IN STD_LOGIC;
        p_outDataArray_10_write : OUT STD_LOGIC;
        p_outDataArray_11_din : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_outDataArray_11_full_n : IN STD_LOGIC;
        p_outDataArray_11_write : OUT STD_LOGIC;
        p_outDataArray_12_din : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_outDataArray_12_full_n : IN STD_LOGIC;
        p_outDataArray_12_write : OUT STD_LOGIC;
        p_outDataArray_13_din : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_outDataArray_13_full_n : IN STD_LOGIC;
        p_outDataArray_13_write : OUT STD_LOGIC;
        p_outDataArray_14_din : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_outDataArray_14_full_n : IN STD_LOGIC;
        p_outDataArray_14_write : OUT STD_LOGIC;
        p_outDataArray_15_din : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_outDataArray_15_full_n : IN STD_LOGIC;
        p_outDataArray_15_write : OUT STD_LOGIC );
    end component;


    component cacheDataDR IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_inData_0_dout : IN STD_LOGIC_VECTOR (53 downto 0);
        p_inData_0_empty_n : IN STD_LOGIC;
        p_inData_0_read : OUT STD_LOGIC;
        p_inData_1_dout : IN STD_LOGIC_VECTOR (53 downto 0);
        p_inData_1_empty_n : IN STD_LOGIC;
        p_inData_1_read : OUT STD_LOGIC;
        p_inData_2_dout : IN STD_LOGIC_VECTOR (53 downto 0);
        p_inData_2_empty_n : IN STD_LOGIC;
        p_inData_2_read : OUT STD_LOGIC;
        p_inData_3_dout : IN STD_LOGIC_VECTOR (53 downto 0);
        p_inData_3_empty_n : IN STD_LOGIC;
        p_inData_3_read : OUT STD_LOGIC;
        p_inData_4_dout : IN STD_LOGIC_VECTOR (53 downto 0);
        p_inData_4_empty_n : IN STD_LOGIC;
        p_inData_4_read : OUT STD_LOGIC;
        p_inData_5_dout : IN STD_LOGIC_VECTOR (53 downto 0);
        p_inData_5_empty_n : IN STD_LOGIC;
        p_inData_5_read : OUT STD_LOGIC;
        p_inData_6_dout : IN STD_LOGIC_VECTOR (53 downto 0);
        p_inData_6_empty_n : IN STD_LOGIC;
        p_inData_6_read : OUT STD_LOGIC;
        p_inData_7_dout : IN STD_LOGIC_VECTOR (53 downto 0);
        p_inData_7_empty_n : IN STD_LOGIC;
        p_inData_7_read : OUT STD_LOGIC;
        p_inData_8_dout : IN STD_LOGIC_VECTOR (53 downto 0);
        p_inData_8_empty_n : IN STD_LOGIC;
        p_inData_8_read : OUT STD_LOGIC;
        p_inData_9_dout : IN STD_LOGIC_VECTOR (53 downto 0);
        p_inData_9_empty_n : IN STD_LOGIC;
        p_inData_9_read : OUT STD_LOGIC;
        p_inData_10_dout : IN STD_LOGIC_VECTOR (53 downto 0);
        p_inData_10_empty_n : IN STD_LOGIC;
        p_inData_10_read : OUT STD_LOGIC;
        p_inData_11_dout : IN STD_LOGIC_VECTOR (53 downto 0);
        p_inData_11_empty_n : IN STD_LOGIC;
        p_inData_11_read : OUT STD_LOGIC;
        p_inData_12_dout : IN STD_LOGIC_VECTOR (53 downto 0);
        p_inData_12_empty_n : IN STD_LOGIC;
        p_inData_12_read : OUT STD_LOGIC;
        p_inData_13_dout : IN STD_LOGIC_VECTOR (53 downto 0);
        p_inData_13_empty_n : IN STD_LOGIC;
        p_inData_13_read : OUT STD_LOGIC;
        p_inData_14_dout : IN STD_LOGIC_VECTOR (53 downto 0);
        p_inData_14_empty_n : IN STD_LOGIC;
        p_inData_14_read : OUT STD_LOGIC;
        p_inData_15_dout : IN STD_LOGIC_VECTOR (53 downto 0);
        p_inData_15_empty_n : IN STD_LOGIC;
        p_inData_15_read : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_0_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_0_we0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_0_d0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_1_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_1_we0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_1_d0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_2_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_2_we0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_2_d0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_3_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_3_we0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_3_d0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_4_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_4_we0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_4_d0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_5_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_5_we0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_5_d0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_6_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_6_we0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_6_d0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_7_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_7_we0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_7_d0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_8_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_8_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_8_we0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_8_d0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_9_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_9_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_9_we0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_9_d0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_10_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_10_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_10_we0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_10_d0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_11_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_11_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_11_we0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_11_d0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_12_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_12_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_12_we0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_12_d0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_13_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_13_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_13_we0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_13_d0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_14_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_14_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_14_we0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_14_d0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_15_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_15_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_15_we0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_15_d0 : OUT STD_LOGIC_VECTOR (53 downto 0) );
    end component;


    component writeBackCacheDataDR IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_outData_din : OUT STD_LOGIC_VECTOR (863 downto 0);
        p_outData_full_n : IN STD_LOGIC;
        p_outData_write : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_0_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_0_q0 : IN STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_1_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_1_q0 : IN STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_2_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_2_q0 : IN STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_3_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_3_q0 : IN STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_4_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_4_q0 : IN STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_5_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_5_q0 : IN STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_6_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_6_q0 : IN STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_7_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_7_q0 : IN STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_8_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_8_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_8_q0 : IN STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_9_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_9_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_9_q0 : IN STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_10_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_10_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_10_q0 : IN STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_11_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_11_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_11_q0 : IN STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_12_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_12_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_12_q0 : IN STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_13_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_13_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_13_q0 : IN STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_14_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_14_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_14_q0 : IN STD_LOGIC_VECTOR (53 downto 0);
        p_digitReseversedOutputBuff_15_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_digitReseversedOutputBuff_15_ce0 : OUT STD_LOGIC;
        p_digitReseversedOutputBuff_15_q0 : IN STD_LOGIC_VECTOR (53 downto 0) );
    end component;


    component fft_top_digitRevehMb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (53 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (53 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (53 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component fifo_w512_d8_D IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (511 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (511 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w672_d8_D IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (671 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (671 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w800_d8_D IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (799 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (799 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w864_d8_D IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (863 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (863 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w54_d8_D IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (53 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (53 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    digitReverseBuff_0_U : component fft_top_digitRevehMb
    generic map (
        DataWidth => 54,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_0_address0,
        i_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_0_ce0,
        i_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_0_we0,
        i_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_0_d0,
        i_q0 => digitReverseBuff_0_i_q0,
        t_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_0_address0,
        t_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv54_0,
        t_q0 => digitReverseBuff_0_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => digitReverseBuff_0_i_full_n,
        i_write => ap_channel_done_digitReverseBuff_0,
        t_empty_n => digitReverseBuff_0_t_empty_n,
        t_read => writeBackCacheDataDR_U0_ap_ready);

    digitReverseBuff_1_U : component fft_top_digitRevehMb
    generic map (
        DataWidth => 54,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_1_address0,
        i_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_1_ce0,
        i_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_1_we0,
        i_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_1_d0,
        i_q0 => digitReverseBuff_1_i_q0,
        t_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_1_address0,
        t_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv54_0,
        t_q0 => digitReverseBuff_1_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => digitReverseBuff_1_i_full_n,
        i_write => ap_channel_done_digitReverseBuff_1,
        t_empty_n => digitReverseBuff_1_t_empty_n,
        t_read => writeBackCacheDataDR_U0_ap_ready);

    digitReverseBuff_2_U : component fft_top_digitRevehMb
    generic map (
        DataWidth => 54,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_2_address0,
        i_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_2_ce0,
        i_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_2_we0,
        i_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_2_d0,
        i_q0 => digitReverseBuff_2_i_q0,
        t_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_2_address0,
        t_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_2_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv54_0,
        t_q0 => digitReverseBuff_2_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => digitReverseBuff_2_i_full_n,
        i_write => ap_channel_done_digitReverseBuff_2,
        t_empty_n => digitReverseBuff_2_t_empty_n,
        t_read => writeBackCacheDataDR_U0_ap_ready);

    digitReverseBuff_3_U : component fft_top_digitRevehMb
    generic map (
        DataWidth => 54,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_3_address0,
        i_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_3_ce0,
        i_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_3_we0,
        i_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_3_d0,
        i_q0 => digitReverseBuff_3_i_q0,
        t_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_3_address0,
        t_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_3_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv54_0,
        t_q0 => digitReverseBuff_3_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => digitReverseBuff_3_i_full_n,
        i_write => ap_channel_done_digitReverseBuff_3,
        t_empty_n => digitReverseBuff_3_t_empty_n,
        t_read => writeBackCacheDataDR_U0_ap_ready);

    digitReverseBuff_4_U : component fft_top_digitRevehMb
    generic map (
        DataWidth => 54,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_4_address0,
        i_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_4_ce0,
        i_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_4_we0,
        i_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_4_d0,
        i_q0 => digitReverseBuff_4_i_q0,
        t_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_4_address0,
        t_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_4_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv54_0,
        t_q0 => digitReverseBuff_4_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => digitReverseBuff_4_i_full_n,
        i_write => ap_channel_done_digitReverseBuff_4,
        t_empty_n => digitReverseBuff_4_t_empty_n,
        t_read => writeBackCacheDataDR_U0_ap_ready);

    digitReverseBuff_5_U : component fft_top_digitRevehMb
    generic map (
        DataWidth => 54,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_5_address0,
        i_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_5_ce0,
        i_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_5_we0,
        i_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_5_d0,
        i_q0 => digitReverseBuff_5_i_q0,
        t_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_5_address0,
        t_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_5_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv54_0,
        t_q0 => digitReverseBuff_5_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => digitReverseBuff_5_i_full_n,
        i_write => ap_channel_done_digitReverseBuff_5,
        t_empty_n => digitReverseBuff_5_t_empty_n,
        t_read => writeBackCacheDataDR_U0_ap_ready);

    digitReverseBuff_6_U : component fft_top_digitRevehMb
    generic map (
        DataWidth => 54,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_6_address0,
        i_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_6_ce0,
        i_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_6_we0,
        i_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_6_d0,
        i_q0 => digitReverseBuff_6_i_q0,
        t_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_6_address0,
        t_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_6_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv54_0,
        t_q0 => digitReverseBuff_6_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => digitReverseBuff_6_i_full_n,
        i_write => ap_channel_done_digitReverseBuff_6,
        t_empty_n => digitReverseBuff_6_t_empty_n,
        t_read => writeBackCacheDataDR_U0_ap_ready);

    digitReverseBuff_7_U : component fft_top_digitRevehMb
    generic map (
        DataWidth => 54,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_7_address0,
        i_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_7_ce0,
        i_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_7_we0,
        i_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_7_d0,
        i_q0 => digitReverseBuff_7_i_q0,
        t_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_7_address0,
        t_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_7_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv54_0,
        t_q0 => digitReverseBuff_7_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => digitReverseBuff_7_i_full_n,
        i_write => ap_channel_done_digitReverseBuff_7,
        t_empty_n => digitReverseBuff_7_t_empty_n,
        t_read => writeBackCacheDataDR_U0_ap_ready);

    digitReverseBuff_8_U : component fft_top_digitRevehMb
    generic map (
        DataWidth => 54,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_8_address0,
        i_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_8_ce0,
        i_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_8_we0,
        i_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_8_d0,
        i_q0 => digitReverseBuff_8_i_q0,
        t_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_8_address0,
        t_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_8_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv54_0,
        t_q0 => digitReverseBuff_8_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => digitReverseBuff_8_i_full_n,
        i_write => ap_channel_done_digitReverseBuff_8,
        t_empty_n => digitReverseBuff_8_t_empty_n,
        t_read => writeBackCacheDataDR_U0_ap_ready);

    digitReverseBuff_9_U : component fft_top_digitRevehMb
    generic map (
        DataWidth => 54,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_9_address0,
        i_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_9_ce0,
        i_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_9_we0,
        i_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_9_d0,
        i_q0 => digitReverseBuff_9_i_q0,
        t_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_9_address0,
        t_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_9_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv54_0,
        t_q0 => digitReverseBuff_9_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => digitReverseBuff_9_i_full_n,
        i_write => ap_channel_done_digitReverseBuff_9,
        t_empty_n => digitReverseBuff_9_t_empty_n,
        t_read => writeBackCacheDataDR_U0_ap_ready);

    digitReverseBuff_10_U : component fft_top_digitRevehMb
    generic map (
        DataWidth => 54,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_10_address0,
        i_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_10_ce0,
        i_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_10_we0,
        i_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_10_d0,
        i_q0 => digitReverseBuff_10_i_q0,
        t_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_10_address0,
        t_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_10_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv54_0,
        t_q0 => digitReverseBuff_10_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => digitReverseBuff_10_i_full_n,
        i_write => ap_channel_done_digitReverseBuff_10,
        t_empty_n => digitReverseBuff_10_t_empty_n,
        t_read => writeBackCacheDataDR_U0_ap_ready);

    digitReverseBuff_11_U : component fft_top_digitRevehMb
    generic map (
        DataWidth => 54,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_11_address0,
        i_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_11_ce0,
        i_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_11_we0,
        i_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_11_d0,
        i_q0 => digitReverseBuff_11_i_q0,
        t_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_11_address0,
        t_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_11_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv54_0,
        t_q0 => digitReverseBuff_11_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => digitReverseBuff_11_i_full_n,
        i_write => ap_channel_done_digitReverseBuff_11,
        t_empty_n => digitReverseBuff_11_t_empty_n,
        t_read => writeBackCacheDataDR_U0_ap_ready);

    digitReverseBuff_12_U : component fft_top_digitRevehMb
    generic map (
        DataWidth => 54,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_12_address0,
        i_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_12_ce0,
        i_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_12_we0,
        i_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_12_d0,
        i_q0 => digitReverseBuff_12_i_q0,
        t_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_12_address0,
        t_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_12_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv54_0,
        t_q0 => digitReverseBuff_12_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => digitReverseBuff_12_i_full_n,
        i_write => ap_channel_done_digitReverseBuff_12,
        t_empty_n => digitReverseBuff_12_t_empty_n,
        t_read => writeBackCacheDataDR_U0_ap_ready);

    digitReverseBuff_13_U : component fft_top_digitRevehMb
    generic map (
        DataWidth => 54,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_13_address0,
        i_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_13_ce0,
        i_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_13_we0,
        i_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_13_d0,
        i_q0 => digitReverseBuff_13_i_q0,
        t_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_13_address0,
        t_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_13_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv54_0,
        t_q0 => digitReverseBuff_13_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => digitReverseBuff_13_i_full_n,
        i_write => ap_channel_done_digitReverseBuff_13,
        t_empty_n => digitReverseBuff_13_t_empty_n,
        t_read => writeBackCacheDataDR_U0_ap_ready);

    digitReverseBuff_14_U : component fft_top_digitRevehMb
    generic map (
        DataWidth => 54,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_14_address0,
        i_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_14_ce0,
        i_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_14_we0,
        i_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_14_d0,
        i_q0 => digitReverseBuff_14_i_q0,
        t_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_14_address0,
        t_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_14_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv54_0,
        t_q0 => digitReverseBuff_14_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => digitReverseBuff_14_i_full_n,
        i_write => ap_channel_done_digitReverseBuff_14,
        t_empty_n => digitReverseBuff_14_t_empty_n,
        t_read => writeBackCacheDataDR_U0_ap_ready);

    digitReverseBuff_15_U : component fft_top_digitRevehMb
    generic map (
        DataWidth => 54,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_15_address0,
        i_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_15_ce0,
        i_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_15_we0,
        i_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_15_d0,
        i_q0 => digitReverseBuff_15_i_q0,
        t_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_15_address0,
        t_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_15_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv54_0,
        t_q0 => digitReverseBuff_15_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => digitReverseBuff_15_i_full_n,
        i_write => ap_channel_done_digitReverseBuff_15,
        t_empty_n => digitReverseBuff_15_t_empty_n,
        t_read => writeBackCacheDataDR_U0_ap_ready);

    castArrayS2Streaming_U0 : component castArrayS2Streaming
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => castArrayS2Streaming_U0_ap_start,
        ap_done => castArrayS2Streaming_U0_ap_done,
        ap_continue => castArrayS2Streaming_U0_ap_continue,
        ap_idle => castArrayS2Streaming_U0_ap_idle,
        ap_ready => castArrayS2Streaming_U0_ap_ready,
        p_inData_dout => p_inData_dout,
        p_inData_empty_n => p_inData_empty_n,
        p_inData_read => castArrayS2Streaming_U0_p_inData_read,
        p_outData_V_superSample_din => castArrayS2Streaming_U0_p_outData_V_superSample_din,
        p_outData_V_superSample_full_n => casted_output_V_supe_full_n,
        p_outData_V_superSample_write => castArrayS2Streaming_U0_p_outData_V_superSample_write);

    streamingDataCommuto_1_U0 : component streamingDataCommuto_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => streamingDataCommuto_1_U0_ap_start,
        ap_done => streamingDataCommuto_1_U0_ap_done,
        ap_continue => streamingDataCommuto_1_U0_ap_continue,
        ap_idle => streamingDataCommuto_1_U0_ap_idle,
        ap_ready => streamingDataCommuto_1_U0_ap_ready,
        p_sampleOut_V_superSample_din => streamingDataCommuto_1_U0_p_sampleOut_V_superSample_din,
        p_sampleOut_V_superSample_full_n => temp_V_superSample_full_n,
        p_sampleOut_V_superSample_write => streamingDataCommuto_1_U0_p_sampleOut_V_superSample_write,
        p_sampleIn_V_superSample_dout => casted_output_V_supe_dout,
        p_sampleIn_V_superSample_empty_n => casted_output_V_supe_empty_n,
        p_sampleIn_V_superSample_read => streamingDataCommuto_1_U0_p_sampleIn_V_superSample_read);

    streamingDataCommuto_3_U0 : component streamingDataCommuto_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => streamingDataCommuto_3_U0_ap_start,
        ap_done => streamingDataCommuto_3_U0_ap_done,
        ap_continue => streamingDataCommuto_3_U0_ap_continue,
        ap_idle => streamingDataCommuto_3_U0_ap_idle,
        ap_ready => streamingDataCommuto_3_U0_ap_ready,
        p_sampleOut_V_superSample_din => streamingDataCommuto_3_U0_p_sampleOut_V_superSample_din,
        p_sampleOut_V_superSample_full_n => p_fftInData_reOrdere_1_full_n,
        p_sampleOut_V_superSample_write => streamingDataCommuto_3_U0_p_sampleOut_V_superSample_write,
        p_sampleIn_V_superSample_dout => temp_V_superSample_dout,
        p_sampleIn_V_superSample_empty_n => temp_V_superSample_empty_n,
        p_sampleIn_V_superSample_read => streamingDataCommuto_3_U0_p_sampleIn_V_superSample_read);

    fftStageKernelS2S_U0 : component fftStageKernelS2S
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fftStageKernelS2S_U0_ap_start,
        ap_done => fftStageKernelS2S_U0_ap_done,
        ap_continue => fftStageKernelS2S_U0_ap_continue,
        ap_idle => fftStageKernelS2S_U0_ap_idle,
        ap_ready => fftStageKernelS2S_U0_ap_ready,
        p_fftReOrderedInput_V_superSample_dout => p_fftInData_reOrdere_1_dout,
        p_fftReOrderedInput_V_superSample_empty_n => p_fftInData_reOrdere_1_empty_n,
        p_fftReOrderedInput_V_superSample_read => fftStageKernelS2S_U0_p_fftReOrderedInput_V_superSample_read,
        p_fftOutData_local_V_superSample_din => fftStageKernelS2S_U0_p_fftOutData_local_V_superSample_din,
        p_fftOutData_local_V_superSample_full_n => fftOutData_local_V_s_full_n,
        p_fftOutData_local_V_superSample_write => fftStageKernelS2S_U0_p_fftOutData_local_V_superSample_write);

    streamingDataCommuto_U0 : component streamingDataCommuto
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => streamingDataCommuto_U0_ap_start,
        ap_done => streamingDataCommuto_U0_ap_done,
        ap_continue => streamingDataCommuto_U0_ap_continue,
        ap_idle => streamingDataCommuto_U0_ap_idle,
        ap_ready => streamingDataCommuto_U0_ap_ready,
        p_sampleOut_V_superSample_din => streamingDataCommuto_U0_p_sampleOut_V_superSample_din,
        p_sampleOut_V_superSample_full_n => fftOutData_local2_V_s_full_n,
        p_sampleOut_V_superSample_write => streamingDataCommuto_U0_p_sampleOut_V_superSample_write,
        p_sampleIn_V_superSample_dout => fftOutData_local_V_s_dout,
        p_sampleIn_V_superSample_empty_n => fftOutData_local_V_s_empty_n,
        p_sampleIn_V_superSample_read => streamingDataCommuto_U0_p_sampleIn_V_superSample_read);

    fftStageKernelS2S_1_U0 : component fftStageKernelS2S_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fftStageKernelS2S_1_U0_ap_start,
        ap_done => fftStageKernelS2S_1_U0_ap_done,
        ap_continue => fftStageKernelS2S_1_U0_ap_continue,
        ap_idle => fftStageKernelS2S_1_U0_ap_idle,
        ap_ready => fftStageKernelS2S_1_U0_ap_ready,
        p_fftReOrderedInput_V_superSample_dout => fftOutData_local2_V_s_dout,
        p_fftReOrderedInput_V_superSample_empty_n => fftOutData_local2_V_s_empty_n,
        p_fftReOrderedInput_V_superSample_read => fftStageKernelS2S_1_U0_p_fftReOrderedInput_V_superSample_read,
        p_fftOutData_local_V_superSample_din => fftStageKernelS2S_1_U0_p_fftOutData_local_V_superSample_din,
        p_fftOutData_local_V_superSample_full_n => fftOutData_local_V_s_1_full_n,
        p_fftOutData_local_V_superSample_write => fftStageKernelS2S_1_U0_p_fftOutData_local_V_superSample_write);

    streamingDataCommuto_2_U0 : component streamingDataCommuto_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => streamingDataCommuto_2_U0_ap_start,
        ap_done => streamingDataCommuto_2_U0_ap_done,
        ap_continue => streamingDataCommuto_2_U0_ap_continue,
        ap_idle => streamingDataCommuto_2_U0_ap_idle,
        ap_ready => streamingDataCommuto_2_U0_ap_ready,
        p_sampleOut_V_superSample_din => streamingDataCommuto_2_U0_p_sampleOut_V_superSample_din,
        p_sampleOut_V_superSample_full_n => fftOutData_local2_V_1_full_n,
        p_sampleOut_V_superSample_write => streamingDataCommuto_2_U0_p_sampleOut_V_superSample_write,
        p_sampleIn_V_superSample_dout => fftOutData_local_V_s_1_dout,
        p_sampleIn_V_superSample_empty_n => fftOutData_local_V_s_1_empty_n,
        p_sampleIn_V_superSample_read => streamingDataCommuto_2_U0_p_sampleIn_V_superSample_read);

    fftStageKernelLastSt_U0 : component fftStageKernelLastSt
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fftStageKernelLastSt_U0_ap_start,
        ap_done => fftStageKernelLastSt_U0_ap_done,
        ap_continue => fftStageKernelLastSt_U0_ap_continue,
        ap_idle => fftStageKernelLastSt_U0_ap_idle,
        ap_ready => fftStageKernelLastSt_U0_ap_ready,
        p_fftReOrderedInput_V_superSample_dout => fftOutData_local2_V_1_dout,
        p_fftReOrderedInput_V_superSample_empty_n => fftOutData_local2_V_1_empty_n,
        p_fftReOrderedInput_V_superSample_read => fftStageKernelLastSt_U0_p_fftReOrderedInput_V_superSample_read,
        p_fftOutData_local_V_superSample_din => fftStageKernelLastSt_U0_p_fftOutData_local_V_superSample_din,
        p_fftOutData_local_V_superSample_full_n => fftOutData_local_V_s_2_full_n,
        p_fftOutData_local_V_superSample_write => fftStageKernelLastSt_U0_p_fftOutData_local_V_superSample_write);

    convertSuperStreamTo_U0 : component convertSuperStreamTo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => convertSuperStreamTo_U0_ap_start,
        ap_done => convertSuperStreamTo_U0_ap_done,
        ap_continue => convertSuperStreamTo_U0_ap_continue,
        ap_idle => convertSuperStreamTo_U0_ap_idle,
        ap_ready => convertSuperStreamTo_U0_ap_ready,
        p_in_V_superSample_dout => fftOutData_local_V_s_2_dout,
        p_in_V_superSample_empty_n => fftOutData_local_V_s_2_empty_n,
        p_in_V_superSample_read => convertSuperStreamTo_U0_p_in_V_superSample_read,
        p_outDataArray_0_din => convertSuperStreamTo_U0_p_outDataArray_0_din,
        p_outDataArray_0_full_n => fftOutData_local2_0_full_n,
        p_outDataArray_0_write => convertSuperStreamTo_U0_p_outDataArray_0_write,
        p_outDataArray_1_din => convertSuperStreamTo_U0_p_outDataArray_1_din,
        p_outDataArray_1_full_n => fftOutData_local2_1_full_n,
        p_outDataArray_1_write => convertSuperStreamTo_U0_p_outDataArray_1_write,
        p_outDataArray_2_din => convertSuperStreamTo_U0_p_outDataArray_2_din,
        p_outDataArray_2_full_n => fftOutData_local2_2_full_n,
        p_outDataArray_2_write => convertSuperStreamTo_U0_p_outDataArray_2_write,
        p_outDataArray_3_din => convertSuperStreamTo_U0_p_outDataArray_3_din,
        p_outDataArray_3_full_n => fftOutData_local2_3_full_n,
        p_outDataArray_3_write => convertSuperStreamTo_U0_p_outDataArray_3_write,
        p_outDataArray_4_din => convertSuperStreamTo_U0_p_outDataArray_4_din,
        p_outDataArray_4_full_n => fftOutData_local2_4_full_n,
        p_outDataArray_4_write => convertSuperStreamTo_U0_p_outDataArray_4_write,
        p_outDataArray_5_din => convertSuperStreamTo_U0_p_outDataArray_5_din,
        p_outDataArray_5_full_n => fftOutData_local2_5_full_n,
        p_outDataArray_5_write => convertSuperStreamTo_U0_p_outDataArray_5_write,
        p_outDataArray_6_din => convertSuperStreamTo_U0_p_outDataArray_6_din,
        p_outDataArray_6_full_n => fftOutData_local2_6_full_n,
        p_outDataArray_6_write => convertSuperStreamTo_U0_p_outDataArray_6_write,
        p_outDataArray_7_din => convertSuperStreamTo_U0_p_outDataArray_7_din,
        p_outDataArray_7_full_n => fftOutData_local2_7_full_n,
        p_outDataArray_7_write => convertSuperStreamTo_U0_p_outDataArray_7_write,
        p_outDataArray_8_din => convertSuperStreamTo_U0_p_outDataArray_8_din,
        p_outDataArray_8_full_n => fftOutData_local2_8_full_n,
        p_outDataArray_8_write => convertSuperStreamTo_U0_p_outDataArray_8_write,
        p_outDataArray_9_din => convertSuperStreamTo_U0_p_outDataArray_9_din,
        p_outDataArray_9_full_n => fftOutData_local2_9_full_n,
        p_outDataArray_9_write => convertSuperStreamTo_U0_p_outDataArray_9_write,
        p_outDataArray_10_din => convertSuperStreamTo_U0_p_outDataArray_10_din,
        p_outDataArray_10_full_n => fftOutData_local2_10_full_n,
        p_outDataArray_10_write => convertSuperStreamTo_U0_p_outDataArray_10_write,
        p_outDataArray_11_din => convertSuperStreamTo_U0_p_outDataArray_11_din,
        p_outDataArray_11_full_n => fftOutData_local2_11_full_n,
        p_outDataArray_11_write => convertSuperStreamTo_U0_p_outDataArray_11_write,
        p_outDataArray_12_din => convertSuperStreamTo_U0_p_outDataArray_12_din,
        p_outDataArray_12_full_n => fftOutData_local2_12_full_n,
        p_outDataArray_12_write => convertSuperStreamTo_U0_p_outDataArray_12_write,
        p_outDataArray_13_din => convertSuperStreamTo_U0_p_outDataArray_13_din,
        p_outDataArray_13_full_n => fftOutData_local2_13_full_n,
        p_outDataArray_13_write => convertSuperStreamTo_U0_p_outDataArray_13_write,
        p_outDataArray_14_din => convertSuperStreamTo_U0_p_outDataArray_14_din,
        p_outDataArray_14_full_n => fftOutData_local2_14_full_n,
        p_outDataArray_14_write => convertSuperStreamTo_U0_p_outDataArray_14_write,
        p_outDataArray_15_din => convertSuperStreamTo_U0_p_outDataArray_15_din,
        p_outDataArray_15_full_n => fftOutData_local2_15_full_n,
        p_outDataArray_15_write => convertSuperStreamTo_U0_p_outDataArray_15_write);

    cacheDataDR_U0 : component cacheDataDR
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => cacheDataDR_U0_ap_start,
        ap_done => cacheDataDR_U0_ap_done,
        ap_continue => cacheDataDR_U0_ap_continue,
        ap_idle => cacheDataDR_U0_ap_idle,
        ap_ready => cacheDataDR_U0_ap_ready,
        p_inData_0_dout => fftOutData_local2_0_dout,
        p_inData_0_empty_n => fftOutData_local2_0_empty_n,
        p_inData_0_read => cacheDataDR_U0_p_inData_0_read,
        p_inData_1_dout => fftOutData_local2_1_dout,
        p_inData_1_empty_n => fftOutData_local2_1_empty_n,
        p_inData_1_read => cacheDataDR_U0_p_inData_1_read,
        p_inData_2_dout => fftOutData_local2_2_dout,
        p_inData_2_empty_n => fftOutData_local2_2_empty_n,
        p_inData_2_read => cacheDataDR_U0_p_inData_2_read,
        p_inData_3_dout => fftOutData_local2_3_dout,
        p_inData_3_empty_n => fftOutData_local2_3_empty_n,
        p_inData_3_read => cacheDataDR_U0_p_inData_3_read,
        p_inData_4_dout => fftOutData_local2_4_dout,
        p_inData_4_empty_n => fftOutData_local2_4_empty_n,
        p_inData_4_read => cacheDataDR_U0_p_inData_4_read,
        p_inData_5_dout => fftOutData_local2_5_dout,
        p_inData_5_empty_n => fftOutData_local2_5_empty_n,
        p_inData_5_read => cacheDataDR_U0_p_inData_5_read,
        p_inData_6_dout => fftOutData_local2_6_dout,
        p_inData_6_empty_n => fftOutData_local2_6_empty_n,
        p_inData_6_read => cacheDataDR_U0_p_inData_6_read,
        p_inData_7_dout => fftOutData_local2_7_dout,
        p_inData_7_empty_n => fftOutData_local2_7_empty_n,
        p_inData_7_read => cacheDataDR_U0_p_inData_7_read,
        p_inData_8_dout => fftOutData_local2_8_dout,
        p_inData_8_empty_n => fftOutData_local2_8_empty_n,
        p_inData_8_read => cacheDataDR_U0_p_inData_8_read,
        p_inData_9_dout => fftOutData_local2_9_dout,
        p_inData_9_empty_n => fftOutData_local2_9_empty_n,
        p_inData_9_read => cacheDataDR_U0_p_inData_9_read,
        p_inData_10_dout => fftOutData_local2_10_dout,
        p_inData_10_empty_n => fftOutData_local2_10_empty_n,
        p_inData_10_read => cacheDataDR_U0_p_inData_10_read,
        p_inData_11_dout => fftOutData_local2_11_dout,
        p_inData_11_empty_n => fftOutData_local2_11_empty_n,
        p_inData_11_read => cacheDataDR_U0_p_inData_11_read,
        p_inData_12_dout => fftOutData_local2_12_dout,
        p_inData_12_empty_n => fftOutData_local2_12_empty_n,
        p_inData_12_read => cacheDataDR_U0_p_inData_12_read,
        p_inData_13_dout => fftOutData_local2_13_dout,
        p_inData_13_empty_n => fftOutData_local2_13_empty_n,
        p_inData_13_read => cacheDataDR_U0_p_inData_13_read,
        p_inData_14_dout => fftOutData_local2_14_dout,
        p_inData_14_empty_n => fftOutData_local2_14_empty_n,
        p_inData_14_read => cacheDataDR_U0_p_inData_14_read,
        p_inData_15_dout => fftOutData_local2_15_dout,
        p_inData_15_empty_n => fftOutData_local2_15_empty_n,
        p_inData_15_read => cacheDataDR_U0_p_inData_15_read,
        p_digitReseversedOutputBuff_0_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_0_address0,
        p_digitReseversedOutputBuff_0_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_0_ce0,
        p_digitReseversedOutputBuff_0_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_0_we0,
        p_digitReseversedOutputBuff_0_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_0_d0,
        p_digitReseversedOutputBuff_1_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_1_address0,
        p_digitReseversedOutputBuff_1_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_1_ce0,
        p_digitReseversedOutputBuff_1_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_1_we0,
        p_digitReseversedOutputBuff_1_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_1_d0,
        p_digitReseversedOutputBuff_2_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_2_address0,
        p_digitReseversedOutputBuff_2_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_2_ce0,
        p_digitReseversedOutputBuff_2_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_2_we0,
        p_digitReseversedOutputBuff_2_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_2_d0,
        p_digitReseversedOutputBuff_3_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_3_address0,
        p_digitReseversedOutputBuff_3_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_3_ce0,
        p_digitReseversedOutputBuff_3_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_3_we0,
        p_digitReseversedOutputBuff_3_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_3_d0,
        p_digitReseversedOutputBuff_4_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_4_address0,
        p_digitReseversedOutputBuff_4_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_4_ce0,
        p_digitReseversedOutputBuff_4_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_4_we0,
        p_digitReseversedOutputBuff_4_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_4_d0,
        p_digitReseversedOutputBuff_5_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_5_address0,
        p_digitReseversedOutputBuff_5_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_5_ce0,
        p_digitReseversedOutputBuff_5_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_5_we0,
        p_digitReseversedOutputBuff_5_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_5_d0,
        p_digitReseversedOutputBuff_6_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_6_address0,
        p_digitReseversedOutputBuff_6_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_6_ce0,
        p_digitReseversedOutputBuff_6_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_6_we0,
        p_digitReseversedOutputBuff_6_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_6_d0,
        p_digitReseversedOutputBuff_7_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_7_address0,
        p_digitReseversedOutputBuff_7_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_7_ce0,
        p_digitReseversedOutputBuff_7_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_7_we0,
        p_digitReseversedOutputBuff_7_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_7_d0,
        p_digitReseversedOutputBuff_8_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_8_address0,
        p_digitReseversedOutputBuff_8_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_8_ce0,
        p_digitReseversedOutputBuff_8_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_8_we0,
        p_digitReseversedOutputBuff_8_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_8_d0,
        p_digitReseversedOutputBuff_9_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_9_address0,
        p_digitReseversedOutputBuff_9_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_9_ce0,
        p_digitReseversedOutputBuff_9_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_9_we0,
        p_digitReseversedOutputBuff_9_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_9_d0,
        p_digitReseversedOutputBuff_10_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_10_address0,
        p_digitReseversedOutputBuff_10_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_10_ce0,
        p_digitReseversedOutputBuff_10_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_10_we0,
        p_digitReseversedOutputBuff_10_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_10_d0,
        p_digitReseversedOutputBuff_11_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_11_address0,
        p_digitReseversedOutputBuff_11_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_11_ce0,
        p_digitReseversedOutputBuff_11_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_11_we0,
        p_digitReseversedOutputBuff_11_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_11_d0,
        p_digitReseversedOutputBuff_12_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_12_address0,
        p_digitReseversedOutputBuff_12_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_12_ce0,
        p_digitReseversedOutputBuff_12_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_12_we0,
        p_digitReseversedOutputBuff_12_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_12_d0,
        p_digitReseversedOutputBuff_13_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_13_address0,
        p_digitReseversedOutputBuff_13_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_13_ce0,
        p_digitReseversedOutputBuff_13_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_13_we0,
        p_digitReseversedOutputBuff_13_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_13_d0,
        p_digitReseversedOutputBuff_14_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_14_address0,
        p_digitReseversedOutputBuff_14_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_14_ce0,
        p_digitReseversedOutputBuff_14_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_14_we0,
        p_digitReseversedOutputBuff_14_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_14_d0,
        p_digitReseversedOutputBuff_15_address0 => cacheDataDR_U0_p_digitReseversedOutputBuff_15_address0,
        p_digitReseversedOutputBuff_15_ce0 => cacheDataDR_U0_p_digitReseversedOutputBuff_15_ce0,
        p_digitReseversedOutputBuff_15_we0 => cacheDataDR_U0_p_digitReseversedOutputBuff_15_we0,
        p_digitReseversedOutputBuff_15_d0 => cacheDataDR_U0_p_digitReseversedOutputBuff_15_d0);

    writeBackCacheDataDR_U0 : component writeBackCacheDataDR
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => writeBackCacheDataDR_U0_ap_start,
        ap_done => writeBackCacheDataDR_U0_ap_done,
        ap_continue => writeBackCacheDataDR_U0_ap_continue,
        ap_idle => writeBackCacheDataDR_U0_ap_idle,
        ap_ready => writeBackCacheDataDR_U0_ap_ready,
        p_outData_din => writeBackCacheDataDR_U0_p_outData_din,
        p_outData_full_n => p_outData_full_n,
        p_outData_write => writeBackCacheDataDR_U0_p_outData_write,
        p_digitReseversedOutputBuff_0_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_0_address0,
        p_digitReseversedOutputBuff_0_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_0_ce0,
        p_digitReseversedOutputBuff_0_q0 => digitReverseBuff_0_t_q0,
        p_digitReseversedOutputBuff_1_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_1_address0,
        p_digitReseversedOutputBuff_1_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_1_ce0,
        p_digitReseversedOutputBuff_1_q0 => digitReverseBuff_1_t_q0,
        p_digitReseversedOutputBuff_2_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_2_address0,
        p_digitReseversedOutputBuff_2_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_2_ce0,
        p_digitReseversedOutputBuff_2_q0 => digitReverseBuff_2_t_q0,
        p_digitReseversedOutputBuff_3_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_3_address0,
        p_digitReseversedOutputBuff_3_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_3_ce0,
        p_digitReseversedOutputBuff_3_q0 => digitReverseBuff_3_t_q0,
        p_digitReseversedOutputBuff_4_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_4_address0,
        p_digitReseversedOutputBuff_4_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_4_ce0,
        p_digitReseversedOutputBuff_4_q0 => digitReverseBuff_4_t_q0,
        p_digitReseversedOutputBuff_5_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_5_address0,
        p_digitReseversedOutputBuff_5_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_5_ce0,
        p_digitReseversedOutputBuff_5_q0 => digitReverseBuff_5_t_q0,
        p_digitReseversedOutputBuff_6_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_6_address0,
        p_digitReseversedOutputBuff_6_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_6_ce0,
        p_digitReseversedOutputBuff_6_q0 => digitReverseBuff_6_t_q0,
        p_digitReseversedOutputBuff_7_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_7_address0,
        p_digitReseversedOutputBuff_7_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_7_ce0,
        p_digitReseversedOutputBuff_7_q0 => digitReverseBuff_7_t_q0,
        p_digitReseversedOutputBuff_8_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_8_address0,
        p_digitReseversedOutputBuff_8_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_8_ce0,
        p_digitReseversedOutputBuff_8_q0 => digitReverseBuff_8_t_q0,
        p_digitReseversedOutputBuff_9_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_9_address0,
        p_digitReseversedOutputBuff_9_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_9_ce0,
        p_digitReseversedOutputBuff_9_q0 => digitReverseBuff_9_t_q0,
        p_digitReseversedOutputBuff_10_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_10_address0,
        p_digitReseversedOutputBuff_10_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_10_ce0,
        p_digitReseversedOutputBuff_10_q0 => digitReverseBuff_10_t_q0,
        p_digitReseversedOutputBuff_11_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_11_address0,
        p_digitReseversedOutputBuff_11_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_11_ce0,
        p_digitReseversedOutputBuff_11_q0 => digitReverseBuff_11_t_q0,
        p_digitReseversedOutputBuff_12_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_12_address0,
        p_digitReseversedOutputBuff_12_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_12_ce0,
        p_digitReseversedOutputBuff_12_q0 => digitReverseBuff_12_t_q0,
        p_digitReseversedOutputBuff_13_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_13_address0,
        p_digitReseversedOutputBuff_13_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_13_ce0,
        p_digitReseversedOutputBuff_13_q0 => digitReverseBuff_13_t_q0,
        p_digitReseversedOutputBuff_14_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_14_address0,
        p_digitReseversedOutputBuff_14_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_14_ce0,
        p_digitReseversedOutputBuff_14_q0 => digitReverseBuff_14_t_q0,
        p_digitReseversedOutputBuff_15_address0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_15_address0,
        p_digitReseversedOutputBuff_15_ce0 => writeBackCacheDataDR_U0_p_digitReseversedOutputBuff_15_ce0,
        p_digitReseversedOutputBuff_15_q0 => digitReverseBuff_15_t_q0);

    casted_output_V_supe_U : component fifo_w512_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => castArrayS2Streaming_U0_p_outData_V_superSample_din,
        if_full_n => casted_output_V_supe_full_n,
        if_write => castArrayS2Streaming_U0_p_outData_V_superSample_write,
        if_dout => casted_output_V_supe_dout,
        if_empty_n => casted_output_V_supe_empty_n,
        if_read => streamingDataCommuto_1_U0_p_sampleIn_V_superSample_read);

    temp_V_superSample_U : component fifo_w512_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => streamingDataCommuto_1_U0_p_sampleOut_V_superSample_din,
        if_full_n => temp_V_superSample_full_n,
        if_write => streamingDataCommuto_1_U0_p_sampleOut_V_superSample_write,
        if_dout => temp_V_superSample_dout,
        if_empty_n => temp_V_superSample_empty_n,
        if_read => streamingDataCommuto_3_U0_p_sampleIn_V_superSample_read);

    p_fftInData_reOrdere_1_U : component fifo_w512_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => streamingDataCommuto_3_U0_p_sampleOut_V_superSample_din,
        if_full_n => p_fftInData_reOrdere_1_full_n,
        if_write => streamingDataCommuto_3_U0_p_sampleOut_V_superSample_write,
        if_dout => p_fftInData_reOrdere_1_dout,
        if_empty_n => p_fftInData_reOrdere_1_empty_n,
        if_read => fftStageKernelS2S_U0_p_fftReOrderedInput_V_superSample_read);

    fftOutData_local_V_s_U : component fifo_w672_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => fftStageKernelS2S_U0_p_fftOutData_local_V_superSample_din,
        if_full_n => fftOutData_local_V_s_full_n,
        if_write => fftStageKernelS2S_U0_p_fftOutData_local_V_superSample_write,
        if_dout => fftOutData_local_V_s_dout,
        if_empty_n => fftOutData_local_V_s_empty_n,
        if_read => streamingDataCommuto_U0_p_sampleIn_V_superSample_read);

    fftOutData_local2_V_s_U : component fifo_w672_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => streamingDataCommuto_U0_p_sampleOut_V_superSample_din,
        if_full_n => fftOutData_local2_V_s_full_n,
        if_write => streamingDataCommuto_U0_p_sampleOut_V_superSample_write,
        if_dout => fftOutData_local2_V_s_dout,
        if_empty_n => fftOutData_local2_V_s_empty_n,
        if_read => fftStageKernelS2S_1_U0_p_fftReOrderedInput_V_superSample_read);

    fftOutData_local_V_s_1_U : component fifo_w800_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => fftStageKernelS2S_1_U0_p_fftOutData_local_V_superSample_din,
        if_full_n => fftOutData_local_V_s_1_full_n,
        if_write => fftStageKernelS2S_1_U0_p_fftOutData_local_V_superSample_write,
        if_dout => fftOutData_local_V_s_1_dout,
        if_empty_n => fftOutData_local_V_s_1_empty_n,
        if_read => streamingDataCommuto_2_U0_p_sampleIn_V_superSample_read);

    fftOutData_local2_V_1_U : component fifo_w800_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => streamingDataCommuto_2_U0_p_sampleOut_V_superSample_din,
        if_full_n => fftOutData_local2_V_1_full_n,
        if_write => streamingDataCommuto_2_U0_p_sampleOut_V_superSample_write,
        if_dout => fftOutData_local2_V_1_dout,
        if_empty_n => fftOutData_local2_V_1_empty_n,
        if_read => fftStageKernelLastSt_U0_p_fftReOrderedInput_V_superSample_read);

    fftOutData_local_V_s_2_U : component fifo_w864_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => fftStageKernelLastSt_U0_p_fftOutData_local_V_superSample_din,
        if_full_n => fftOutData_local_V_s_2_full_n,
        if_write => fftStageKernelLastSt_U0_p_fftOutData_local_V_superSample_write,
        if_dout => fftOutData_local_V_s_2_dout,
        if_empty_n => fftOutData_local_V_s_2_empty_n,
        if_read => convertSuperStreamTo_U0_p_in_V_superSample_read);

    fftOutData_local2_0_U : component fifo_w54_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => convertSuperStreamTo_U0_p_outDataArray_0_din,
        if_full_n => fftOutData_local2_0_full_n,
        if_write => convertSuperStreamTo_U0_p_outDataArray_0_write,
        if_dout => fftOutData_local2_0_dout,
        if_empty_n => fftOutData_local2_0_empty_n,
        if_read => cacheDataDR_U0_p_inData_0_read);

    fftOutData_local2_1_U : component fifo_w54_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => convertSuperStreamTo_U0_p_outDataArray_1_din,
        if_full_n => fftOutData_local2_1_full_n,
        if_write => convertSuperStreamTo_U0_p_outDataArray_1_write,
        if_dout => fftOutData_local2_1_dout,
        if_empty_n => fftOutData_local2_1_empty_n,
        if_read => cacheDataDR_U0_p_inData_1_read);

    fftOutData_local2_2_U : component fifo_w54_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => convertSuperStreamTo_U0_p_outDataArray_2_din,
        if_full_n => fftOutData_local2_2_full_n,
        if_write => convertSuperStreamTo_U0_p_outDataArray_2_write,
        if_dout => fftOutData_local2_2_dout,
        if_empty_n => fftOutData_local2_2_empty_n,
        if_read => cacheDataDR_U0_p_inData_2_read);

    fftOutData_local2_3_U : component fifo_w54_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => convertSuperStreamTo_U0_p_outDataArray_3_din,
        if_full_n => fftOutData_local2_3_full_n,
        if_write => convertSuperStreamTo_U0_p_outDataArray_3_write,
        if_dout => fftOutData_local2_3_dout,
        if_empty_n => fftOutData_local2_3_empty_n,
        if_read => cacheDataDR_U0_p_inData_3_read);

    fftOutData_local2_4_U : component fifo_w54_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => convertSuperStreamTo_U0_p_outDataArray_4_din,
        if_full_n => fftOutData_local2_4_full_n,
        if_write => convertSuperStreamTo_U0_p_outDataArray_4_write,
        if_dout => fftOutData_local2_4_dout,
        if_empty_n => fftOutData_local2_4_empty_n,
        if_read => cacheDataDR_U0_p_inData_4_read);

    fftOutData_local2_5_U : component fifo_w54_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => convertSuperStreamTo_U0_p_outDataArray_5_din,
        if_full_n => fftOutData_local2_5_full_n,
        if_write => convertSuperStreamTo_U0_p_outDataArray_5_write,
        if_dout => fftOutData_local2_5_dout,
        if_empty_n => fftOutData_local2_5_empty_n,
        if_read => cacheDataDR_U0_p_inData_5_read);

    fftOutData_local2_6_U : component fifo_w54_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => convertSuperStreamTo_U0_p_outDataArray_6_din,
        if_full_n => fftOutData_local2_6_full_n,
        if_write => convertSuperStreamTo_U0_p_outDataArray_6_write,
        if_dout => fftOutData_local2_6_dout,
        if_empty_n => fftOutData_local2_6_empty_n,
        if_read => cacheDataDR_U0_p_inData_6_read);

    fftOutData_local2_7_U : component fifo_w54_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => convertSuperStreamTo_U0_p_outDataArray_7_din,
        if_full_n => fftOutData_local2_7_full_n,
        if_write => convertSuperStreamTo_U0_p_outDataArray_7_write,
        if_dout => fftOutData_local2_7_dout,
        if_empty_n => fftOutData_local2_7_empty_n,
        if_read => cacheDataDR_U0_p_inData_7_read);

    fftOutData_local2_8_U : component fifo_w54_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => convertSuperStreamTo_U0_p_outDataArray_8_din,
        if_full_n => fftOutData_local2_8_full_n,
        if_write => convertSuperStreamTo_U0_p_outDataArray_8_write,
        if_dout => fftOutData_local2_8_dout,
        if_empty_n => fftOutData_local2_8_empty_n,
        if_read => cacheDataDR_U0_p_inData_8_read);

    fftOutData_local2_9_U : component fifo_w54_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => convertSuperStreamTo_U0_p_outDataArray_9_din,
        if_full_n => fftOutData_local2_9_full_n,
        if_write => convertSuperStreamTo_U0_p_outDataArray_9_write,
        if_dout => fftOutData_local2_9_dout,
        if_empty_n => fftOutData_local2_9_empty_n,
        if_read => cacheDataDR_U0_p_inData_9_read);

    fftOutData_local2_10_U : component fifo_w54_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => convertSuperStreamTo_U0_p_outDataArray_10_din,
        if_full_n => fftOutData_local2_10_full_n,
        if_write => convertSuperStreamTo_U0_p_outDataArray_10_write,
        if_dout => fftOutData_local2_10_dout,
        if_empty_n => fftOutData_local2_10_empty_n,
        if_read => cacheDataDR_U0_p_inData_10_read);

    fftOutData_local2_11_U : component fifo_w54_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => convertSuperStreamTo_U0_p_outDataArray_11_din,
        if_full_n => fftOutData_local2_11_full_n,
        if_write => convertSuperStreamTo_U0_p_outDataArray_11_write,
        if_dout => fftOutData_local2_11_dout,
        if_empty_n => fftOutData_local2_11_empty_n,
        if_read => cacheDataDR_U0_p_inData_11_read);

    fftOutData_local2_12_U : component fifo_w54_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => convertSuperStreamTo_U0_p_outDataArray_12_din,
        if_full_n => fftOutData_local2_12_full_n,
        if_write => convertSuperStreamTo_U0_p_outDataArray_12_write,
        if_dout => fftOutData_local2_12_dout,
        if_empty_n => fftOutData_local2_12_empty_n,
        if_read => cacheDataDR_U0_p_inData_12_read);

    fftOutData_local2_13_U : component fifo_w54_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => convertSuperStreamTo_U0_p_outDataArray_13_din,
        if_full_n => fftOutData_local2_13_full_n,
        if_write => convertSuperStreamTo_U0_p_outDataArray_13_write,
        if_dout => fftOutData_local2_13_dout,
        if_empty_n => fftOutData_local2_13_empty_n,
        if_read => cacheDataDR_U0_p_inData_13_read);

    fftOutData_local2_14_U : component fifo_w54_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => convertSuperStreamTo_U0_p_outDataArray_14_din,
        if_full_n => fftOutData_local2_14_full_n,
        if_write => convertSuperStreamTo_U0_p_outDataArray_14_write,
        if_dout => fftOutData_local2_14_dout,
        if_empty_n => fftOutData_local2_14_empty_n,
        if_read => cacheDataDR_U0_p_inData_14_read);

    fftOutData_local2_15_U : component fifo_w54_d8_D
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => convertSuperStreamTo_U0_p_outDataArray_15_din,
        if_full_n => fftOutData_local2_15_full_n,
        if_write => convertSuperStreamTo_U0_p_outDataArray_15_write,
        if_dout => fftOutData_local2_15_dout,
        if_empty_n => fftOutData_local2_15_empty_n,
        if_read => cacheDataDR_U0_p_inData_15_read);





    ap_sync_reg_cacheDataDR_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_cacheDataDR_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_cacheDataDR_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_digitReverseBuff_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_digitReverseBuff_0 <= ap_const_logic_0;
            else
                if (((cacheDataDR_U0_ap_done and cacheDataDR_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_digitReverseBuff_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_digitReverseBuff_0 <= ap_sync_channel_write_digitReverseBuff_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_digitReverseBuff_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_digitReverseBuff_1 <= ap_const_logic_0;
            else
                if (((cacheDataDR_U0_ap_done and cacheDataDR_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_digitReverseBuff_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_digitReverseBuff_1 <= ap_sync_channel_write_digitReverseBuff_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_digitReverseBuff_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_digitReverseBuff_10 <= ap_const_logic_0;
            else
                if (((cacheDataDR_U0_ap_done and cacheDataDR_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_digitReverseBuff_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_digitReverseBuff_10 <= ap_sync_channel_write_digitReverseBuff_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_digitReverseBuff_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_digitReverseBuff_11 <= ap_const_logic_0;
            else
                if (((cacheDataDR_U0_ap_done and cacheDataDR_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_digitReverseBuff_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_digitReverseBuff_11 <= ap_sync_channel_write_digitReverseBuff_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_digitReverseBuff_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_digitReverseBuff_12 <= ap_const_logic_0;
            else
                if (((cacheDataDR_U0_ap_done and cacheDataDR_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_digitReverseBuff_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_digitReverseBuff_12 <= ap_sync_channel_write_digitReverseBuff_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_digitReverseBuff_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_digitReverseBuff_13 <= ap_const_logic_0;
            else
                if (((cacheDataDR_U0_ap_done and cacheDataDR_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_digitReverseBuff_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_digitReverseBuff_13 <= ap_sync_channel_write_digitReverseBuff_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_digitReverseBuff_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_digitReverseBuff_14 <= ap_const_logic_0;
            else
                if (((cacheDataDR_U0_ap_done and cacheDataDR_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_digitReverseBuff_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_digitReverseBuff_14 <= ap_sync_channel_write_digitReverseBuff_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_digitReverseBuff_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_digitReverseBuff_15 <= ap_const_logic_0;
            else
                if (((cacheDataDR_U0_ap_done and cacheDataDR_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_digitReverseBuff_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_digitReverseBuff_15 <= ap_sync_channel_write_digitReverseBuff_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_digitReverseBuff_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_digitReverseBuff_2 <= ap_const_logic_0;
            else
                if (((cacheDataDR_U0_ap_done and cacheDataDR_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_digitReverseBuff_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_digitReverseBuff_2 <= ap_sync_channel_write_digitReverseBuff_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_digitReverseBuff_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_digitReverseBuff_3 <= ap_const_logic_0;
            else
                if (((cacheDataDR_U0_ap_done and cacheDataDR_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_digitReverseBuff_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_digitReverseBuff_3 <= ap_sync_channel_write_digitReverseBuff_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_digitReverseBuff_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_digitReverseBuff_4 <= ap_const_logic_0;
            else
                if (((cacheDataDR_U0_ap_done and cacheDataDR_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_digitReverseBuff_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_digitReverseBuff_4 <= ap_sync_channel_write_digitReverseBuff_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_digitReverseBuff_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_digitReverseBuff_5 <= ap_const_logic_0;
            else
                if (((cacheDataDR_U0_ap_done and cacheDataDR_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_digitReverseBuff_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_digitReverseBuff_5 <= ap_sync_channel_write_digitReverseBuff_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_digitReverseBuff_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_digitReverseBuff_6 <= ap_const_logic_0;
            else
                if (((cacheDataDR_U0_ap_done and cacheDataDR_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_digitReverseBuff_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_digitReverseBuff_6 <= ap_sync_channel_write_digitReverseBuff_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_digitReverseBuff_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_digitReverseBuff_7 <= ap_const_logic_0;
            else
                if (((cacheDataDR_U0_ap_done and cacheDataDR_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_digitReverseBuff_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_digitReverseBuff_7 <= ap_sync_channel_write_digitReverseBuff_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_digitReverseBuff_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_digitReverseBuff_8 <= ap_const_logic_0;
            else
                if (((cacheDataDR_U0_ap_done and cacheDataDR_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_digitReverseBuff_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_digitReverseBuff_8 <= ap_sync_channel_write_digitReverseBuff_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_digitReverseBuff_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_digitReverseBuff_9 <= ap_const_logic_0;
            else
                if (((cacheDataDR_U0_ap_done and cacheDataDR_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_digitReverseBuff_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_digitReverseBuff_9 <= ap_sync_channel_write_digitReverseBuff_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_convertSuperStreamTo_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_convertSuperStreamTo_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_convertSuperStreamTo_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_fftStageKernelLastSt_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_fftStageKernelLastSt_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_fftStageKernelLastSt_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_fftStageKernelS2S_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_fftStageKernelS2S_1_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_fftStageKernelS2S_1_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_fftStageKernelS2S_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_fftStageKernelS2S_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_fftStageKernelS2S_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_streamingDataCommuto_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_streamingDataCommuto_1_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_streamingDataCommuto_1_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_streamingDataCommuto_2_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_streamingDataCommuto_2_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_streamingDataCommuto_2_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_streamingDataCommuto_3_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_streamingDataCommuto_3_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_streamingDataCommuto_3_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_streamingDataCommuto_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_streamingDataCommuto_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_streamingDataCommuto_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;

    ap_channel_done_digitReverseBuff_0 <= ((ap_sync_reg_channel_write_digitReverseBuff_0 xor ap_const_logic_1) and cacheDataDR_U0_ap_done);
    ap_channel_done_digitReverseBuff_1 <= ((ap_sync_reg_channel_write_digitReverseBuff_1 xor ap_const_logic_1) and cacheDataDR_U0_ap_done);
    ap_channel_done_digitReverseBuff_10 <= ((ap_sync_reg_channel_write_digitReverseBuff_10 xor ap_const_logic_1) and cacheDataDR_U0_ap_done);
    ap_channel_done_digitReverseBuff_11 <= ((ap_sync_reg_channel_write_digitReverseBuff_11 xor ap_const_logic_1) and cacheDataDR_U0_ap_done);
    ap_channel_done_digitReverseBuff_12 <= ((ap_sync_reg_channel_write_digitReverseBuff_12 xor ap_const_logic_1) and cacheDataDR_U0_ap_done);
    ap_channel_done_digitReverseBuff_13 <= ((ap_sync_reg_channel_write_digitReverseBuff_13 xor ap_const_logic_1) and cacheDataDR_U0_ap_done);
    ap_channel_done_digitReverseBuff_14 <= ((ap_sync_reg_channel_write_digitReverseBuff_14 xor ap_const_logic_1) and cacheDataDR_U0_ap_done);
    ap_channel_done_digitReverseBuff_15 <= ((ap_sync_reg_channel_write_digitReverseBuff_15 xor ap_const_logic_1) and cacheDataDR_U0_ap_done);
    ap_channel_done_digitReverseBuff_2 <= ((ap_sync_reg_channel_write_digitReverseBuff_2 xor ap_const_logic_1) and cacheDataDR_U0_ap_done);
    ap_channel_done_digitReverseBuff_3 <= ((ap_sync_reg_channel_write_digitReverseBuff_3 xor ap_const_logic_1) and cacheDataDR_U0_ap_done);
    ap_channel_done_digitReverseBuff_4 <= ((ap_sync_reg_channel_write_digitReverseBuff_4 xor ap_const_logic_1) and cacheDataDR_U0_ap_done);
    ap_channel_done_digitReverseBuff_5 <= ((ap_sync_reg_channel_write_digitReverseBuff_5 xor ap_const_logic_1) and cacheDataDR_U0_ap_done);
    ap_channel_done_digitReverseBuff_6 <= ((ap_sync_reg_channel_write_digitReverseBuff_6 xor ap_const_logic_1) and cacheDataDR_U0_ap_done);
    ap_channel_done_digitReverseBuff_7 <= ((ap_sync_reg_channel_write_digitReverseBuff_7 xor ap_const_logic_1) and cacheDataDR_U0_ap_done);
    ap_channel_done_digitReverseBuff_8 <= ((ap_sync_reg_channel_write_digitReverseBuff_8 xor ap_const_logic_1) and cacheDataDR_U0_ap_done);
    ap_channel_done_digitReverseBuff_9 <= ((ap_sync_reg_channel_write_digitReverseBuff_9 xor ap_const_logic_1) and cacheDataDR_U0_ap_done);
    ap_done <= writeBackCacheDataDR_U0_ap_done;
    ap_idle <= (writeBackCacheDataDR_U0_ap_idle and streamingDataCommuto_U0_ap_idle and streamingDataCommuto_3_U0_ap_idle and streamingDataCommuto_2_U0_ap_idle and streamingDataCommuto_1_U0_ap_idle and fftStageKernelS2S_U0_ap_idle and fftStageKernelS2S_1_U0_ap_idle and fftStageKernelLastSt_U0_ap_idle and (digitReverseBuff_15_t_empty_n xor ap_const_logic_1) and (digitReverseBuff_14_t_empty_n xor ap_const_logic_1) and (digitReverseBuff_13_t_empty_n xor ap_const_logic_1) and (digitReverseBuff_12_t_empty_n xor ap_const_logic_1) and (digitReverseBuff_11_t_empty_n xor ap_const_logic_1) and (digitReverseBuff_10_t_empty_n xor ap_const_logic_1) and (digitReverseBuff_9_t_empty_n xor ap_const_logic_1) and (digitReverseBuff_8_t_empty_n xor ap_const_logic_1) and (digitReverseBuff_7_t_empty_n xor ap_const_logic_1) and (digitReverseBuff_6_t_empty_n xor ap_const_logic_1) and (digitReverseBuff_5_t_empty_n xor ap_const_logic_1) and (digitReverseBuff_4_t_empty_n xor ap_const_logic_1) and (digitReverseBuff_3_t_empty_n xor ap_const_logic_1) and (digitReverseBuff_2_t_empty_n xor ap_const_logic_1) and (digitReverseBuff_1_t_empty_n xor ap_const_logic_1) and (digitReverseBuff_0_t_empty_n xor ap_const_logic_1) and convertSuperStreamTo_U0_ap_idle and castArrayS2Streaming_U0_ap_idle and cacheDataDR_U0_ap_idle);
    ap_ready <= castArrayS2Streaming_U0_ap_ready;
    ap_sync_channel_write_digitReverseBuff_0 <= ((cacheDataDR_U0_p_digitReseversedOutputBuff_0_full_n and ap_channel_done_digitReverseBuff_0) or ap_sync_reg_channel_write_digitReverseBuff_0);
    ap_sync_channel_write_digitReverseBuff_1 <= ((cacheDataDR_U0_p_digitReseversedOutputBuff_1_full_n and ap_channel_done_digitReverseBuff_1) or ap_sync_reg_channel_write_digitReverseBuff_1);
    ap_sync_channel_write_digitReverseBuff_10 <= ((cacheDataDR_U0_p_digitReseversedOutputBuff_10_full_n and ap_channel_done_digitReverseBuff_10) or ap_sync_reg_channel_write_digitReverseBuff_10);
    ap_sync_channel_write_digitReverseBuff_11 <= ((cacheDataDR_U0_p_digitReseversedOutputBuff_11_full_n and ap_channel_done_digitReverseBuff_11) or ap_sync_reg_channel_write_digitReverseBuff_11);
    ap_sync_channel_write_digitReverseBuff_12 <= ((cacheDataDR_U0_p_digitReseversedOutputBuff_12_full_n and ap_channel_done_digitReverseBuff_12) or ap_sync_reg_channel_write_digitReverseBuff_12);
    ap_sync_channel_write_digitReverseBuff_13 <= ((cacheDataDR_U0_p_digitReseversedOutputBuff_13_full_n and ap_channel_done_digitReverseBuff_13) or ap_sync_reg_channel_write_digitReverseBuff_13);
    ap_sync_channel_write_digitReverseBuff_14 <= ((cacheDataDR_U0_p_digitReseversedOutputBuff_14_full_n and ap_channel_done_digitReverseBuff_14) or ap_sync_reg_channel_write_digitReverseBuff_14);
    ap_sync_channel_write_digitReverseBuff_15 <= ((cacheDataDR_U0_p_digitReseversedOutputBuff_15_full_n and ap_channel_done_digitReverseBuff_15) or ap_sync_reg_channel_write_digitReverseBuff_15);
    ap_sync_channel_write_digitReverseBuff_2 <= ((cacheDataDR_U0_p_digitReseversedOutputBuff_2_full_n and ap_channel_done_digitReverseBuff_2) or ap_sync_reg_channel_write_digitReverseBuff_2);
    ap_sync_channel_write_digitReverseBuff_3 <= ((cacheDataDR_U0_p_digitReseversedOutputBuff_3_full_n and ap_channel_done_digitReverseBuff_3) or ap_sync_reg_channel_write_digitReverseBuff_3);
    ap_sync_channel_write_digitReverseBuff_4 <= ((cacheDataDR_U0_p_digitReseversedOutputBuff_4_full_n and ap_channel_done_digitReverseBuff_4) or ap_sync_reg_channel_write_digitReverseBuff_4);
    ap_sync_channel_write_digitReverseBuff_5 <= ((cacheDataDR_U0_p_digitReseversedOutputBuff_5_full_n and ap_channel_done_digitReverseBuff_5) or ap_sync_reg_channel_write_digitReverseBuff_5);
    ap_sync_channel_write_digitReverseBuff_6 <= ((cacheDataDR_U0_p_digitReseversedOutputBuff_6_full_n and ap_channel_done_digitReverseBuff_6) or ap_sync_reg_channel_write_digitReverseBuff_6);
    ap_sync_channel_write_digitReverseBuff_7 <= ((cacheDataDR_U0_p_digitReseversedOutputBuff_7_full_n and ap_channel_done_digitReverseBuff_7) or ap_sync_reg_channel_write_digitReverseBuff_7);
    ap_sync_channel_write_digitReverseBuff_8 <= ((cacheDataDR_U0_p_digitReseversedOutputBuff_8_full_n and ap_channel_done_digitReverseBuff_8) or ap_sync_reg_channel_write_digitReverseBuff_8);
    ap_sync_channel_write_digitReverseBuff_9 <= ((cacheDataDR_U0_p_digitReseversedOutputBuff_9_full_n and ap_channel_done_digitReverseBuff_9) or ap_sync_reg_channel_write_digitReverseBuff_9);
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= writeBackCacheDataDR_U0_ap_done;
    ap_sync_ready <= castArrayS2Streaming_U0_ap_ready;
    cacheDataDR_U0_ap_continue <= (ap_sync_channel_write_digitReverseBuff_9 and ap_sync_channel_write_digitReverseBuff_8 and ap_sync_channel_write_digitReverseBuff_7 and ap_sync_channel_write_digitReverseBuff_6 and ap_sync_channel_write_digitReverseBuff_5 and ap_sync_channel_write_digitReverseBuff_4 and ap_sync_channel_write_digitReverseBuff_3 and ap_sync_channel_write_digitReverseBuff_2 and ap_sync_channel_write_digitReverseBuff_15 and ap_sync_channel_write_digitReverseBuff_14 and ap_sync_channel_write_digitReverseBuff_13 and ap_sync_channel_write_digitReverseBuff_12 and ap_sync_channel_write_digitReverseBuff_11 and ap_sync_channel_write_digitReverseBuff_10 and ap_sync_channel_write_digitReverseBuff_1 and ap_sync_channel_write_digitReverseBuff_0);
    cacheDataDR_U0_ap_start <= (ap_sync_reg_cacheDataDR_U0_ap_start or ap_start);
    cacheDataDR_U0_p_digitReseversedOutputBuff_0_full_n <= digitReverseBuff_0_i_full_n;
    cacheDataDR_U0_p_digitReseversedOutputBuff_10_full_n <= digitReverseBuff_10_i_full_n;
    cacheDataDR_U0_p_digitReseversedOutputBuff_11_full_n <= digitReverseBuff_11_i_full_n;
    cacheDataDR_U0_p_digitReseversedOutputBuff_12_full_n <= digitReverseBuff_12_i_full_n;
    cacheDataDR_U0_p_digitReseversedOutputBuff_13_full_n <= digitReverseBuff_13_i_full_n;
    cacheDataDR_U0_p_digitReseversedOutputBuff_14_full_n <= digitReverseBuff_14_i_full_n;
    cacheDataDR_U0_p_digitReseversedOutputBuff_15_full_n <= digitReverseBuff_15_i_full_n;
    cacheDataDR_U0_p_digitReseversedOutputBuff_1_full_n <= digitReverseBuff_1_i_full_n;
    cacheDataDR_U0_p_digitReseversedOutputBuff_2_full_n <= digitReverseBuff_2_i_full_n;
    cacheDataDR_U0_p_digitReseversedOutputBuff_3_full_n <= digitReverseBuff_3_i_full_n;
    cacheDataDR_U0_p_digitReseversedOutputBuff_4_full_n <= digitReverseBuff_4_i_full_n;
    cacheDataDR_U0_p_digitReseversedOutputBuff_5_full_n <= digitReverseBuff_5_i_full_n;
    cacheDataDR_U0_p_digitReseversedOutputBuff_6_full_n <= digitReverseBuff_6_i_full_n;
    cacheDataDR_U0_p_digitReseversedOutputBuff_7_full_n <= digitReverseBuff_7_i_full_n;
    cacheDataDR_U0_p_digitReseversedOutputBuff_8_full_n <= digitReverseBuff_8_i_full_n;
    cacheDataDR_U0_p_digitReseversedOutputBuff_9_full_n <= digitReverseBuff_9_i_full_n;
    castArrayS2Streaming_U0_ap_continue <= ap_const_logic_1;
    castArrayS2Streaming_U0_ap_start <= ap_start;
    convertSuperStreamTo_U0_ap_continue <= ap_const_logic_1;
    convertSuperStreamTo_U0_ap_start <= (ap_sync_reg_convertSuperStreamTo_U0_ap_start or ap_start);
    fftStageKernelLastSt_U0_ap_continue <= ap_const_logic_1;
    fftStageKernelLastSt_U0_ap_start <= (ap_sync_reg_fftStageKernelLastSt_U0_ap_start or ap_start);
    fftStageKernelS2S_1_U0_ap_continue <= ap_const_logic_1;
    fftStageKernelS2S_1_U0_ap_start <= (ap_sync_reg_fftStageKernelS2S_1_U0_ap_start or ap_start);
    fftStageKernelS2S_U0_ap_continue <= ap_const_logic_1;
    fftStageKernelS2S_U0_ap_start <= (ap_sync_reg_fftStageKernelS2S_U0_ap_start or ap_start);
    p_inData_read <= castArrayS2Streaming_U0_p_inData_read;
    p_outData_din <= writeBackCacheDataDR_U0_p_outData_din;
    p_outData_write <= writeBackCacheDataDR_U0_p_outData_write;
    streamingDataCommuto_1_U0_ap_continue <= ap_const_logic_1;
    streamingDataCommuto_1_U0_ap_start <= (ap_sync_reg_streamingDataCommuto_1_U0_ap_start or ap_start);
    streamingDataCommuto_2_U0_ap_continue <= ap_const_logic_1;
    streamingDataCommuto_2_U0_ap_start <= (ap_sync_reg_streamingDataCommuto_2_U0_ap_start or ap_start);
    streamingDataCommuto_3_U0_ap_continue <= ap_const_logic_1;
    streamingDataCommuto_3_U0_ap_start <= (ap_sync_reg_streamingDataCommuto_3_U0_ap_start or ap_start);
    streamingDataCommuto_U0_ap_continue <= ap_const_logic_1;
    streamingDataCommuto_U0_ap_start <= (ap_sync_reg_streamingDataCommuto_U0_ap_start or ap_start);
    writeBackCacheDataDR_U0_ap_continue <= ap_const_logic_1;
    writeBackCacheDataDR_U0_ap_start <= (digitReverseBuff_9_t_empty_n and digitReverseBuff_8_t_empty_n and digitReverseBuff_7_t_empty_n and digitReverseBuff_6_t_empty_n and digitReverseBuff_5_t_empty_n and digitReverseBuff_4_t_empty_n and digitReverseBuff_3_t_empty_n and digitReverseBuff_2_t_empty_n and digitReverseBuff_1_t_empty_n and digitReverseBuff_15_t_empty_n and digitReverseBuff_14_t_empty_n and digitReverseBuff_13_t_empty_n and digitReverseBuff_12_t_empty_n and digitReverseBuff_11_t_empty_n and digitReverseBuff_10_t_empty_n and digitReverseBuff_0_t_empty_n);
end behav;
